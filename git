[1mdiff --git "a/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/soma-em-vetores/somavetor.c" "b/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/soma-em-vetores/somavetor.c"[m
[1mindex 364d5e1..3b4da7c 100644[m
[1m--- "a/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/soma-em-vetores/somavetor.c"[m	
[1m+++ "b/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/soma-em-vetores/somavetor.c"[m	
[36m@@ -1,23 +1,23 @@[m
[31m-#include <stdio.h>[m
[31m-[m
[31m-int main(){[m
[31m-	int n;[m
[31m-	int soma = 0;[m
[31m-[m
[31m-	printf("Quantas notas vocÃª deseja informar?: ");[m
[31m-	scanf("%d", &n);[m
[31m-	int notas[n];[m
[31m-[m
[31m-	for(int i = 0; i<n; i++){[m
[31m-		printf("\nInsira o valor: ");[m
[31m-		scanf("%d", &notas[i]);[m
[31m-	}[m
[31m-[m
[31m-	for(int i = 0; i<n; i++){[m
[31m-		soma = soma + notas[i];[m
[31m-	}[m
[31m-[m
[31m-	printf("\nSoma = %d", soma);[m
[31m-[m
[31m-return 0;[m
[31m-}[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32mint main(){[m
[32m+[m	[32mint n;[m
[32m+[m	[32mint soma = 0;[m
[32m+[m
[32m+[m	[32mprintf("Quantas notas vocÃª deseja informar?: ");[m
[32m+[m	[32mscanf("%d", &n);[m
[32m+[m	[32mint notas[n];[m
[32m+[m
[32m+[m	[32mfor(int i = 0; i<n; i++){[m
[32m+[m		[32mprintf("\nInsira o valor: ");[m
[32m+[m		[32mscanf("%d", &notas[i]);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfor(int i = 0; i<n; i++){[m
[32m+[m		[32msoma = soma + notas[i];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprintf("\nSoma = %d", soma);[m
[32m+[m
[32m+[m[32mreturn 0;[m
[32m+[m[32m}[m
[1mdiff --git "a/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/triangulo-de-floyd/triangulodefloydcontador.c" "b/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/triangulo-de-floyd/triangulodefloydcontador.c"[m
[1mindex 69d4f66..3ad66a1 100644[m
[1m--- "a/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/triangulo-de-floyd/triangulodefloydcontador.c"[m	
[1m+++ "b/Atividades/S1/Introdu\303\247\303\243o a Programa\303\247\303\243o/triangulo-de-floyd/triangulodefloydcontador.c"[m	
[36m@@ -1,22 +1,22 @@[m
[31m-#include <stdio.h>[m
[31m-[m
[31m-int main(){[m
[31m-	int n;[m
[31m-	int count = 0;[m
[31m-	[m
[31m-	printf("Insira um valor: ");[m
[31m-	scanf("%d", &n);[m
[31m-	[m
[31m-	for(int i = 0; i<=n; i++){[m
[31m-		for(int j = 0; j<=i; j++){[m
[31m-			count++;[m
[31m-			printf("%d ", count);[m
[31m-				[m
[31m-		}	[m
[31m-		printf("\n");[m
[31m-	}[m
[31m-[m
[31m-[m
[31m-[m
[31m-return 0;[m
[31m-}[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32mint main(){[m
[32m+[m	[32mint n;[m
[32m+[m	[32mint count = 0;[m
[32m+[m[41m	[m
[32m+[m	[32mprintf("Insira um valor: ");[m
[32m+[m	[32mscanf("%d", &n);[m
[32m+[m[41m	[m
[32m+[m	[32mfor(int i = 0; i<=n; i++){[m
[32m+[m		[32mfor(int j = 0; j<=i; j++){[m
[32m+[m			[32mcount++;[m
[32m+[m			[32mprintf("%d ", count);[m
[32m+[m[41m				[m
[32m+[m		[32m}[m[41m	[m
[32m+[m		[32mprintf("\n");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mreturn 0;[m
[32m+[m[32m}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo"[m
[1mnew file mode 160000[m
[1mindex 0000000..cce8a5d[m
[1m--- /dev/null[m
[1m+++ "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo"[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit cce8a5dd19dbc9b4398f86f823226f521aee94fb[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Container.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Container.class"[m
[1mdeleted file mode 100644[m
[1mindex 62ae79e..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Container.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Enemy1.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Enemy1.class"[m
[1mdeleted file mode 100644[m
[1mindex 48bd635..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Enemy1.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase$TecladoAdapter.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase$TecladoAdapter.class"[m
[1mdeleted file mode 100644[m
[1mindex addf8d7..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase$TecladoAdapter.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase.class"[m
[1mdeleted file mode 100644[m
[1mindex 9e1e677..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Fase.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Player.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Player.class"[m
[1mdeleted file mode 100644[m
[1mindex db0f8d6..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Player.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tela.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tela.class"[m
[1mdeleted file mode 100644[m
[1mindex 8279a4c..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tela.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaFase.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaFase.class"[m
[1mdeleted file mode 100644[m
[1mindex 3d098ee..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaFase.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover$1.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover$1.class"[m
[1mdeleted file mode 100644[m
[1mindex 969734d..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover$1.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover.class"[m
[1mdeleted file mode 100644[m
[1mindex 2e2341d..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaGameover.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$1.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$1.class"[m
[1mdeleted file mode 100644[m
[1mindex 55882ed..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$1.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$2.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$2.class"[m
[1mdeleted file mode 100644[m
[1mindex 5d9a84b..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu$2.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu.class"[m
[1mdeleted file mode 100644[m
[1mindex 8f981bf..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/TelaMenu.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tiro.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tiro.class"[m
[1mdeleted file mode 100644[m
[1mindex 9439752..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/game/Model/Tiro.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/background.jpg" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/background.jpg"[m
[1mdeleted file mode 100644[m
[1mindex aa9f62f..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/background.jpg" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/enemy1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/enemy1.png"[m
[1mdeleted file mode 100644[m
[1mindex 3de2084..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/enemy1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/gameover.jpg" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/gameover.jpg"[m
[1mdeleted file mode 100644[m
[1mindex bf9f295..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/gameover.jpg" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/pngegg.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/pngegg.png"[m
[1mdeleted file mode 100644[m
[1mindex fb36ceb..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/pngegg.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/spacenave1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/spacenave1.png"[m
[1mdeleted file mode 100644[m
[1mindex bcbb159..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/spacenave1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/tiro1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/tiro1.png"[m
[1mdeleted file mode 100644[m
[1mindex 8c892aa..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/bin/res/tiro1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/recorde.txt" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/recorde.txt"[m
[1mdeleted file mode 100644[m
[1mindex 7730ef7..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/recorde.txt"[m	
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-89[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Container.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Container.java"[m
[1mdeleted file mode 100644[m
[1mindex fe1fec5..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Container.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,52 +0,0 @@[m
[31m-package game;[m
[31m-[m
[31m-import java.awt.EventQueue;[m
[31m-[m
[31m-import game.Model.Tela;[m
[31m-import game.Model.TelaFase;[m
[31m-import game.Model.TelaGameover;[m
[31m-import game.Model.TelaMenu;[m
[31m-[m
[31m-public class Container{[m
[31m-	public static Tela arrTelas[];[m
[31m-	[m
[31m-	public static void main(String[] args) {[m
[31m-		arrTelas = new Tela[] {[m
[31m-				new TelaMenu(), new TelaFase(), new TelaGameover()[m
[31m-		};[m
[31m-		[m
[31m-			while(Tela.telaAtual != -1) {[m
[31m-				System.out.println("");[m
[31m-				int j = verificarTelaAtividada();[m
[31m-				if (j != Tela.telaAtual) {[m
[31m-					trocarTela(j, Tela.telaAtual);[m
[31m-				}[m
[31m-			}[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    public static void trocarTela(int k, int i) { [m
[31m-   [m
[31m-    	if(Tela.telaAtual >= 0)[m
[31m-    		arrTelas[i].setVisible(true);[m
[31m-    	[m
[31m-    	if (k >= 0)[m
[31m-            arrTelas[k].setVisible(false);[m
[31m-    	[m
[31m-        [m
[31m-    }[m
[31m-[m
[31m-    public static int verificarTelaAtividada() {[m
[31m-        int j = -1;[m
[31m-[m
[31m-        for (int i = 0; i < arrTelas.length; i++) {[m
[31m-        	[m
[31m-            if (arrTelas[i].isVisible() == true) {[m
[31m-                j = i;[m
[31m-                break;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        return j;[m
[31m-	}[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Enemy1.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Enemy1.java"[m
[1mdeleted file mode 100644[m
[1mindex 49e8dcd..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Enemy1.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,70 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-import java.awt.Rectangle;[m
[31m-[m
[31m-import javax.swing.ImageIcon;[m
[31m-[m
[31m-public class Enemy1 {[m
[31m-	[m
[31m-	private Image imagem;[m
[31m-	private int x, y;[m
[31m-	private int largura, altura;[m
[31m-	private boolean isVisible;[m
[31m-	[m
[31m-	private static int VELOCIDADE = 2;[m
[31m-	[m
[31m-	public Enemy1(int x, int y) {[m
[31m-		this.x = x;[m
[31m-		this.y = y;[m
[31m-		isVisible = true;[m
[31m-	}[m
[31m-	[m
[31m-	public void load() {[m
[31m-		ImageIcon ref = new ImageIcon("src//res//enemy1.png");[m
[31m-		imagem = ref.getImage();[m
[31m-		[m
[31m-		this.largura = imagem.getWidth(null);[m
[31m-		this.altura = imagem.getHeight(null);[m
[31m-	}[m
[31m-	[m
[31m-	public void update() {[m
[31m-		this.x -= VELOCIDADE;[m
[31m-		[m
[31m-	}[m
[31m-	[m
[31m-	public Rectangle getBounds() {[m
[31m-		return new Rectangle(x, y, largura, altura);[m
[31m-	}[m
[31m-[m
[31m-	public boolean isVisible() {[m
[31m-		return isVisible;[m
[31m-	}[m
[31m-[m
[31m-	public void setVisible(boolean isVisible) {[m
[31m-		this.isVisible = isVisible;[m
[31m-	}[m
[31m-[m
[31m-	public static int getVELOCIDADE() {[m
[31m-		return VELOCIDADE;[m
[31m-	}[m
[31m-[m
[31m-	public static void setVELOCIDADE(int vELOCIDADE) {[m
[31m-		VELOCIDADE += vELOCIDADE;[m
[31m-	}[m
[31m-[m
[31m-	public int getX() {[m
[31m-		return x;[m
[31m-	}[m
[31m-[m
[31m-	public int getY() {[m
[31m-		return y;[m
[31m-	}[m
[31m-[m
[31m-	public Image getImagem() {[m
[31m-		return imagem;[m
[31m-	}[m
[31m-	[m
[31m-	[m
[31m-	[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Fase.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Fase.java"[m
[1mdeleted file mode 100644[m
[1mindex c1216e6..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Fase.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,260 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.Color;[m
[31m-import java.awt.Font;[m
[31m-import java.awt.Graphics;[m
[31m-import java.awt.Graphics2D;[m
[31m-import java.awt.Image;[m
[31m-import java.awt.Rectangle;[m
[31m-import java.awt.Toolkit;[m
[31m-import java.awt.event.ActionEvent;[m
[31m-import java.awt.event.ActionListener;[m
[31m-import java.awt.event.KeyAdapter;[m
[31m-import java.awt.event.KeyEvent;[m
[31m-import java.io.File;[m
[31m-import java.io.PrintWriter;[m
[31m-import java.security.PublicKey;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Iterator;[m
[31m-import java.util.List;[m
[31m-import java.util.Scanner;[m
[31m-import game.Model.TelaMenu;[m
[31m-import javax.swing.Timer;[m
[31m-import javax.lang.model.element.RecordComponentElement;[m
[31m-import javax.sound.sampled.AudioInputStream;[m
[31m-import javax.sound.sampled.AudioSystem;[m
[31m-import javax.sound.sampled.Clip;[m
[31m-import javax.swing.ImageIcon;[m
[31m-import javax.swing.JPanel;[m
[31m-[m
[31m-public class Fase extends JPanel implements ActionListener{[m
[31m-	[m
[31m-	private Clip exploSound;[m
[31m-	private Image background;[m
[31m-	private Image fimjogo;[m
[31m-	private Player player;[m
[31m-	private Timer timer;[m
[31m-	private List<Enemy1> enemy1;[m
[31m-	private boolean inJogo;[m
[31m-	private int inimigosAbatidos = 0;[m
[31m-	private int recorde = 0;[m
[31m-	private static final String MAIOR_RECORDE = "recorde.txt";[m
[31m-	[m
[31m-	private void carregarRecorde() {[m
[31m-	    try {[m
[31m-	        File arquivo = new File(MAIOR_RECORDE);[m
[31m-[m
[31m-	        if (arquivo.exists()) {[m
[31m-	            Scanner scanner = new Scanner(arquivo);[m
[31m-	            if (scanner.hasNextInt()) {[m
[31m-	                recorde = scanner.nextInt();[m
[31m-	            }[m
[31m-	            scanner.close();[m
[31m-	        }[m
[31m-	    } catch (Exception e) {[m
[31m-	        e.printStackTrace();[m
[31m-	    }[m
[31m-	}[m
[31m-[m
[31m-	private void salvarRecorde() {[m
[31m-	    try {[m
[31m-	        File arquivo = new File(MAIOR_RECORDE);[m
[31m-	        PrintWriter writer = new PrintWriter(arquivo);[m
[31m-	        writer.print(recorde);[m
[31m-	        writer.close();[m
[31m-	    } catch (Exception e) {[m
[31m-	        e.printStackTrace();[m
[31m-	    }[m
[31m-	}[m
[31m-	[m
[31m-	public Fase() {[m
[31m-		[m
[31m-		setFocusable(true);[m
[31m-		setDoubleBuffered(true);[m
[31m-		[m
[31m-		ImageIcon ref = new ImageIcon("src//res//background.jpg");[m
[31m-		background = ref.getImage();[m
[31m-		[m
[31m-		ImageIcon ref2 = new ImageIcon("src//res//gameover-removebg-preview.png");[m
[31m-		fimjogo = ref2.getImage();[m
[31m-		[m
[31m-		[m
[31m-		int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;[m
[31m-        int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;[m
[31m-        background = background.getScaledInstance(screenWidth, screenHeight, Image.SCALE_DEFAULT);[m
[31m-        fimjogo = fimjogo.getScaledInstance(screenWidth, screenHeight, Image.SCALE_DEFAULT);[m
[31m-        [m
[31m-		player = new Player();[m
[31m-		player.load();[m
[31m-		[m
[31m-		addKeyListener(new TecladoAdapter());[m
[31m-		[m
[31m-		timer = new Timer(5, this);[m
[31m-		timer.start();[m
[31m-		[m
[31m-		inicializaInimigos();[m
[31m-		[m
[31m-		carregarRecorde();		[m
[31m-		try {[m
[31m-            File soundFile = new File("src//res//explosao.wav");[m
[31m-            AudioInputStream audioIn = AudioSystem.getAudioInputStream(soundFile);[m
[31m-            exploSound = AudioSystem.getClip();[m
[31m-            exploSound.open(audioIn);[m
[31m-        } catch (Exception e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-		[m
[31m-		inJogo = true;[m
[31m-	}[m
[31m-	[m
[31m-	public void inicializaInimigos() {[m
[31m-		[m
[31m-		[m
[31m-		int coordenadas [] = new int[100];[m
[31m-		enemy1 = new ArrayList<Enemy1>();[m
[31m-		[m
[31m-		for (int i = 0; i < coordenadas.length; i++) {[m
[31m-		    int x = (int)(Math.random() * 8000 + 1024);  [m
[31m-		    int y = (int)(Math.random() * 680);  [m
[31m-[m
[31m-		    enemy1.add(new Enemy1(x, y));[m
[31m-		    [m
[31m-		}[m
[31m-[m
[31m-	}[m
[31m-	[m
[31m-	public void paint(Graphics g) {[m
[31m-		Graphics2D graficos = (Graphics2D) g;[m
[31m-		[m
[31m-		if(inJogo){[m
[31m-			[m
[31m-			graficos.drawImage(background, 0, 0, null);[m
[31m-			graficos.drawImage(player.getImagem(), player.getX(), player.getY(), this);[m
[31m-			[m
[31m-			List<Tiro> tiros = player.getTiros();[m
[31m-			for (int i = 0; i < tiros.size(); i++) {[m
[31m-				Tiro m = tiros.get(i);[m
[31m-				m.load();[m
[31m-				graficos.drawImage(m.getImagem(),m.getX(),m.getY(),this);[m
[31m-			}[m
[31m-			[m
[31m-			for (int k = 0; k < enemy1.size(); k++) {[m
[31m-			    Enemy1 in = enemy1.get(k);[m
[31m-			   // System.out.println("Inimigo " + k + ": x = " + in.getX() + ", y = " + in.getY());  // Checando as posicoes dos inimigos[m
[31m-			    in.load();[m
[31m-			    graficos.drawImage(in.getImagem(), in.getX(), in.getY(), this);[m
[31m-			}[m
[31m-			[m
[31m-			Font minhaFonte = new Font("Impact", Font.PLAIN, 16);[m
[31m-		    graficos.setFont(minhaFonte);[m
[31m-			graficos.setColor(Color.WHITE);[m
[31m-			graficos.drawString("Inimigos Abatidos: " + inimigosAbatidos, 10, 20);[m
[31m-			graficos.drawString("Recorde: " + recorde, 10, 40);[m
[31m-[m
[31m-		}else {[m
[31m-			[m
[31m-			graficos.drawImage(fimjogo, 0, 0, null);[m
[31m-			Tela.telaAtual = 2;[m
[31m-		}[m
[31m-		[m
[31m-		[m
[31m-		g.dispose();[m
[31m-	}[m
[31m-	[m
[31m-	@Override[m
[31m-	public void actionPerformed(ActionEvent e) {[m
[31m-		player.update();[m
[31m-		[m
[31m-		List<Tiro> tiros = player.getTiros();[m
[31m-		for (int i = 0; i < tiros.size(); i++) {[m
[31m-			Tiro m = tiros.get(i);[m
[31m-			if(m.isVisible())[m
[31m-				m.update();[m
[31m-			else[m
[31m-				tiros.remove(i);			[m
[31m-		}[m
[31m-		[m
[31m-		Iterator<Enemy1> iterator = enemy1.iterator();[m
[31m-		while (iterator.hasNext()) {[m
[31m-		    Enemy1 in = iterator.next();[m
[31m-		    if (in.isVisible()) {[m
[31m-		        in.update();[m
[31m-		    } else {[m
[31m-		        iterator.remove();[m
[31m-		    }[m
[31m-		}[m
[31m-[m
[31m-		checarColisoes();[m
[31m-		repaint();[m
[31m-	}[m
[31m-	[m
[31m-	public void checarColisoes() {[m
[31m-		Rectangle naveForm = player.getBounds();[m
[31m-		Rectangle enemy1Form;[m
[31m-		Rectangle tiroForm;[m
[31m-		[m
[31m-		[m
[31m-		boolean colisaoDetectada = false;[m
[31m-[m
[31m-		for (int k = 0; k < enemy1.size(); k++) {[m
[31m-		    Enemy1 tempEnemy1 = enemy1.get(k);[m
[31m-		    enemy1Form = tempEnemy1.getBounds();[m
[31m-		    [m
[31m-		    if (naveForm.intersects(enemy1Form)) {[m
[31m-		        if (!colisaoDetectada) {[m
[31m-		            player.setVisivel(false);[m
[31m-		            tempEnemy1.setVisible(false);[m
[31m-		            inJogo = false;[m
[31m-		            inimigosAbatidos++;[m
[31m-[m
[31m-		            if (exploSound != null) {[m
[31m-		                if (!exploSound.isRunning()) {[m
[31m-		                    exploSound.stop();[m
[31m-		                    exploSound.setFramePosition(0);[m
[31m-		                    exploSound.start();[m
[31m-		                }[m
[31m-		            }[m
[31m-[m
[31m-		            colisaoDetectada = true;[m
[31m-		        }[m
[31m-		    }[m
[31m-		}[m
[31m-		[m
[31m-		List<Tiro> tiros = player.getTiros();[m
[31m-		for (int i = 0; i < tiros.size(); i++) {[m
[31m-			Tiro tempTiro = tiros.get(i);[m
[31m-			tiroForm = tempTiro.getBounds();[m
[31m-			for (int j = 0; j < enemy1.size(); j++) {[m
[31m-				Enemy1 tempEnemy1 = enemy1.get(j);[m
[31m-				enemy1Form = tempEnemy1.getBounds();[m
[31m-				if(tiroForm.intersects(enemy1Form)) {[m
[31m-					tempEnemy1.setVisible(false);[m
[31m-					tempTiro.setVisible(false);[m
[31m-					inimigosAbatidos++;[m
[31m-					[m
[31m-					if(inimigosAbatidos % 25 == 0)[m
[31m-						tempEnemy1.setVELOCIDADE(1);[m
[31m-				}[m
[31m-			}[m
[31m-			[m
[31m-			if (inimigosAbatidos > recorde) {[m
[31m-		        recorde = inimigosAbatidos;[m
[31m-		        salvarRecorde();[m
[31m-		    }[m
[31m-		}[m
[31m-		[m
[31m-	}[m
[31m-	[m
[31m-	private class TecladoAdapter extends KeyAdapter{[m
[31m-		[m
[31m-		@Override[m
[31m-		public void keyPressed(KeyEvent e) {[m
[31m-			player.teclaPress(e);[m
[31m-		}[m
[31m-		[m
[31m-		@Override[m
[31m-		public void keyReleased(KeyEvent e) {[m
[31m-			player.teclaSolta(e);[m
[31m-		}[m
[31m-	}[m
[31m-}	[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Player.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Player.java"[m
[1mdeleted file mode 100644[m
[1mindex e76174c..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Player.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,148 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-import java.awt.Rectangle;[m
[31m-import java.awt.Toolkit;[m
[31m-import java.awt.event.KeyEvent;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.List;[m
[31m-[m
[31m-import javax.sound.sampled.AudioInputStream;[m
[31m-import javax.sound.sampled.AudioSystem;[m
[31m-import javax.sound.sampled.Clip;[m
[31m-import java.io.File;[m
[31m-import javax.sound.sampled.Clip;[m
[31m-import javax.swing.ImageIcon;[m
[31m-[m
[31m-public class Player {[m
[31m-	[m
[31m-	private Clip tiroSound;[m
[31m-	private int x, y;[m
[31m-	private int dx, dy;[m
[31m-	private Image imagem;[m
[31m-	private int altura, largura;[m
[31m-	private List <Tiro> tiros;[m
[31m-	private boolean isVisivel;[m
[31m-	[m
[31m-	private static int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;[m
[31m-	private static int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;[m
[31m-	[m
[31m-	public Player() {[m
[31m-		this.x = 100;[m
[31m-		this.y = 100;[m
[31m-		isVisivel = true;[m
[31m-		tiros = new ArrayList<Tiro>();[m
[31m-		[m
[31m-		try {[m
[31m-            File soundFile = new File("src//res//tiro1.wav");[m
[31m-            AudioInputStream audioIn = AudioSystem.getAudioInputStream(soundFile);[m
[31m-            tiroSound = AudioSystem.getClip();[m
[31m-            tiroSound.open(audioIn);[m
[31m-        } catch (Exception e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-    }[m
[31m-	[m
[31m-	[m
[31m-	public void load() {[m
[31m-		ImageIcon ref = new ImageIcon("src//res//spacenave1.png");[m
[31m-		imagem = ref.getImage();[m
[31m-		[m
[31m-		altura = imagem.getHeight(null);[m
[31m-		largura = imagem.getWidth(null);[m
[31m-	}[m
[31m-	[m
[31m-	public void update() {[m
[31m-		x += dx;[m
[31m-		[m
[31m-		if (x < 0) {[m
[31m-	        x = 0;[m
[31m-	    } else if (x > screenWidth - largura) {[m
[31m-	        x = screenWidth - largura;[m
[31m-	    }[m
[31m-[m
[31m-		y += dy;[m
[31m-[m
[31m-	    if (y < 0) {[m
[31m-	        y = 0;[m
[31m-	    } else if (y > screenHeight - altura) {[m
[31m-	        y = screenHeight - altura;[m
[31m-	    }[m
[31m-	}[m
[31m-	[m
[31m-	public Rectangle getBounds() {[m
[31m-		return new Rectangle(x, y, largura, altura);[m
[31m-	}[m
[31m-	[m
[31m-	public void tiroSimples() {[m
[31m-		this.tiros.add(new Tiro(x + largura, y + (altura/2)));[m
[31m-		if (tiroSound != null) {[m
[31m-			tiroSound.stop();[m
[31m-	        tiroSound.setFramePosition(0); [m
[31m-	        tiroSound.start();  [m
[31m-	    }[m
[31m-	}[m
[31m-	[m
[31m-	public void teclaPress(KeyEvent tecla){[m
[31m-		int cod = tecla.getKeyCode();[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_SPACE) // Atirar[m
[31m-			tiroSimples();[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_W) // Pra cima[m
[31m-			dy = -3;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_S) // Pra baixo[m
[31m-			dy = 3;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_D) //Pra direita[m
[31m-			dx = 3;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_A) //Pra esquerda[m
[31m-			dx = -3;[m
[31m-	}[m
[31m-	[m
[31m-	public void teclaSolta(KeyEvent tecla){[m
[31m-		int cod = tecla.getKeyCode();[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_W)[m
[31m-			dy = 0;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_S)[m
[31m-			dy = 0;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_D)[m
[31m-			dx = 0;[m
[31m-		[m
[31m-		if(cod == KeyEvent.VK_A)[m
[31m-			dx = 0;[m
[31m-	}[m
[31m-[m
[31m-	public int getX() {[m
[31m-		return x;[m
[31m-	}[m
[31m-[m
[31m-	public int getY() {[m
[31m-		return y;[m
[31m-	}[m
[31m-[m
[31m-	public Image getImagem() {[m
[31m-		return imagem;[m
[31m-	}[m
[31m-[m
[31m-	public List<Tiro> getTiros() {[m
[31m-		return tiros;[m
[31m-	}[m
[31m-[m
[31m-	public boolean isVisivel() {[m
[31m-		return isVisivel;[m
[31m-	}[m
[31m-[m
[31m-	public void setVisivel(boolean isVisivel) {[m
[31m-		this.isVisivel = isVisivel;[m
[31m-	}[m
[31m-	[m
[31m-	[m
[31m-	[m
[31m-	[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tela.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tela.java"[m
[1mdeleted file mode 100644[m
[1mindex 6f37ee2..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tela.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.GraphicsDevice;[m
[31m-import java.awt.GraphicsEnvironment;[m
[31m-import java.awt.Toolkit;[m
[31m-[m
[31m-import javax.swing.ImageIcon;[m
[31m-import javax.swing.JFrame;[m
[31m-[m
[31m-public class Tela extends JFrame{[m
[31m-	public static int telaAtual = 0;[m
[31m-	[m
[31m-	public Tela() {[m
[31m-		setTitle("Alien Attack on Earth"); //Titulo da janela[m
[31m-		setExtendedState(JFrame.MAXIMIZED_BOTH); // Tamanho da janela[m
[31m-		//int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;[m
[31m-        //int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;[m
[31m-		//setSize(700,728);[m
[31m-		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //Parar o programa qnd fechar a janela[m
[31m-		setLocationRelativeTo(null); // Carregar a tela no centro[m
[31m-		this.setResizable(false); // Travar a tela na resolucao padrao[m
[31m-[m
[31m-	    setVisible(false);[m
[31m-		[m
[31m-		ImageIcon icon = new ImageIcon("src//res//spacenave1.png");[m
[31m-		setIconImage(icon.getImage());[m
[31m-	}[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaFase.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaFase.java"[m
[1mdeleted file mode 100644[m
[1mindex 653c0d9..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaFase.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-import javax.swing.ImageIcon;[m
[31m-import javax.swing.JFrame;[m
[31m-import javax.swing.SwingUtilities;[m
[31m-[m
[31m-import game.Model.Fase;[m
[31m-[m
[31m-public class TelaFase extends Tela{[m
[31m-	[m
[31m-	//private static final long serialVersionUID = 1L;[m
[31m-[m
[31m-	public TelaFase() {[m
[31m-	[m
[31m-		add(new Fase());[m
[31m-	}[m
[31m-}[m
[31m-	[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaGameover.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaGameover.java"[m
[1mdeleted file mode 100644[m
[1mindex af8e02f..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaGameover.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,65 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.BorderLayout;[m
[31m-import java.awt.Color;[m
[31m-import java.awt.Dimension;[m
[31m-import java.awt.FlowLayout;[m
[31m-import java.awt.Graphics;[m
[31m-import java.awt.Graphics2D;[m
[31m-import java.awt.Image;[m
[31m-import java.awt.Toolkit;[m
[31m-import java.awt.event.ActionEvent;[m
[31m-import java.awt.event.ActionListener;[m
[31m-[m
[31m-import javax.swing.ImageIcon;[m
[31m-import javax.swing.JButton;[m
[31m-import javax.swing.JLabel;[m
[31m-import javax.swing.JPanel;[m
[31m-[m
[31m-public class TelaGameover extends Tela{[m
[31m-	private JLabel background;[m
[31m-	private JPanel painel;[m
[31m-	private JButton voltaMenu;[m
[31m-	[m
[31m-	public TelaGameover() {[m
[31m-		setTitle("Game Over");[m
[31m-		ImageIcon ref = new ImageIcon("src//res//gameover-removebg-preview.png");[m
[31m-		Image fundo = ref.getImage();[m
[31m-		JPanel painel = new JPanel();[m
[31m-		//setLayout(null);[m
[31m-		int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;[m
[31m-        int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;[m
[31m-        fundo = fundo.getScaledInstance(screenWidth, screenHeight, Image.SCALE_DEFAULT);[m
[31m-        JLabel background = new JLabel("", ref, JLabel.CENTER);[m
[31m-        background.setBounds(0, 0, screenWidth, screenHeight);[m
[31m-        add(painel);[m
[31m-        painel.setSize(new Dimension(screenWidth, screenHeight));[m
[31m-        painel.setLayout(new BorderLayout(7,7));[m
[31m-		painel.setBackground(Color.black);[m
[31m-        painel.add(background);[m
[31m-        [m
[31m-        JButton voltaMenu = new JButton();[m
[31m-        voltaMenu.setOpaque(false);[m
[31m-        voltaMenu.setContentAreaFilled(false);[m
[31m-        voltaMenu.setBorderPainted(false);[m
[31m-        voltaMenu.setSize(new Dimension(screenWidth, screenHeight));[m
[31m-        [m
[31m-        voltaMenu.addActionListener(new ActionListener() {[m
[31m-        	public void actionPerformed(ActionEvent e) {[m
[31m-        		Tela.telaAtual = 0;[m
[31m-        	}[m
[31m-        });[m
[31m-        painel.add(voltaMenu);[m
[31m-        [m
[31m-        [m
[31m-	}[m
[31m-	[m
[31m-	/*public void paint(Graphics g) {[m
[31m-		[m
[31m-		Graphics2D graficos = (Graphics2D) g;[m
[31m-		[m
[31m-		graficos.drawImage(fundo, 0, 0, null);[m
[31m-		[m
[31m-		g.dispose();[m
[31m-	}*/[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaMenu.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaMenu.java"[m
[1mdeleted file mode 100644[m
[1mindex 9c687b0..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/TelaMenu.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,110 +0,0 @@[m
[31m-[m
[31m-package game.Model;[m
[31m-[m
[31m-import javax.sound.sampled.AudioInputStream;[m
[31m-import javax.sound.sampled.AudioSystem;[m
[31m-import javax.sound.sampled.Clip;[m
[31m-import javax.swing.*;[m
[31m-import javax.swing.plaf.basic.BasicButtonUI;[m
[31m-[m
[31m-import java.awt.*;[m
[31m-import java.awt.event.ActionEvent;[m
[31m-import java.awt.event.ActionListener;[m
[31m-import java.io.File;[m
[31m-[m
[31m-public class TelaMenu extends Tela {[m
[31m-[m
[31m-    private JButton startButton;[m
[31m-    private JButton quitButton;[m
[31m-    private Image fundo;[m
[31m-    private Clip trilha;[m
[31m-    [m
[31m-    [m
[31m-[m
[31m-    public TelaMenu() {[m
[31m-        [m
[31m-    	[m
[31m-    	setLayout(new BorderLayout());[m
[31m-        [m
[31m-        JPanel centralPanel = new JPanel(new GridBagLayout()); [m
[31m-        startButton = new JButton("Start");[m
[31m-        quitButton = new JButton("Quit");[m
[31m-        [m
[31m-        GridBagConstraints gbc = new GridBagConstraints();[m
[31m-        gbc.gridx = 0;[m
[31m-        gbc.gridy = 0;[m
[31m-        gbc.insets = new Insets(10, 0, 10, 0);[m
[31m-        centralPanel.setLayout(new GridBagLayout());[m
[31m-        centralPanel.add(startButton, gbc);[m
[31m-[m
[31m-        gbc.gridy = 1;[m
[31m-        centralPanel.add(quitButton, gbc);[m
[31m-        [m
[31m-        add(centralPanel, BorderLayout.CENTER);[m
[31m-[m
[31m-        startButton.addActionListener(new ActionListener() {[m
[31m-            public void actionPerformed(ActionEvent e) {[m
[31m-                Tela.telaAtual = 1;[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        quitButton.addActionListener(new ActionListener() {[m
[31m-            public void actionPerformed(ActionEvent e) {[m
[31m-                Tela.telaAtual = -1;[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        carregarRecursos();[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    private void carregarRecursos() {[m
[31m-        ImageIcon ref = new ImageIcon(getClass().getResource("/res/background.jpg"));[m
[31m-        fundo = ref.getImage();[m
[31m-[m
[31m-        int screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;[m
[31m-        int screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;[m
[31m-        fundo = fundo.getScaledInstance(screenWidth, screenHeight, Image.SCALE_DEFAULT);[m
[31m-        [m
[31m-        try {[m
[31m-            File soundFile = new File("src//res//trilha.wav");[m
[31m-            AudioInputStream audioIn = AudioSystem.getAudioInputStream(soundFile);[m
[31m-            trilha = AudioSystem.getClip();[m
[31m-            trilha.open(audioIn);[m
[31m-        } catch (Exception e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-    }[m
[31m-    [m
[31m-    public void iniciarMusica() {[m
[31m-        [m
[31m-        if (trilha != null) {[m
[31m-            trilha.loop(trilha.LOOP_CONTINUOUSLY);[m
[31m-            trilha.start();[m
[31m-        }[m
[31m-    }[m
[31m-    [m
[31m-    public void pararMusica() {[m
[31m-        [m
[31m-        if (trilha != null && trilha.isRunning()) {[m
[31m-            trilha.stop();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void paint(Graphics g) {[m
[31m-        super.paint(g);[m
[31m-        g.drawImage(fundo, 0, 0, this);[m
[31m-        g.setColor(Color.WHITE);[m
[31m-        g.setFont(new Font("IMPACT", Font.PLAIN, 100));[m
[31m-        String mensagem = "Alien Attack on Earth";[m
[31m-        int x = getWidth() / 2 - g.getFontMetrics().stringWidth(mensagem) / 2;[m
[31m-        int y = getHeight() / 4;[m
[31m-        g.drawString(mensagem, x, y);[m
[31m-    }[m
[31m-    [m
[31m-    [m
[31m-    [m
[31m-}[m
[31m-[m
[31m-[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tiro.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tiro.java"[m
[1mdeleted file mode 100644[m
[1mindex ca399ae..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/game/Model/Tiro.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,73 +0,0 @@[m
[31m-package game.Model;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-import java.awt.Rectangle;[m
[31m-[m
[31m-import javax.swing.ImageIcon;[m
[31m-[m
[31m-public class Tiro {[m
[31m-	[m
[31m-	private Image imagem;[m
[31m-	private int x, y;[m
[31m-	private int largura, altura;[m
[31m-	private boolean isVisible;[m
[31m-	[m
[31m-	private static final int ALCANCE = 1366;[m
[31m-	private static int VELOCIDADE = 7	;[m
[31m-	[m
[31m-	public Tiro(int x, int y) {[m
[31m-		this.x = x;[m
[31m-		this.y = y;[m
[31m-		isVisible = true;[m
[31m-	}[m
[31m-	[m
[31m-	public void load() {[m
[31m-		ImageIcon ref = new ImageIcon("src//res//tiro1.png");[m
[31m-		imagem = ref.getImage();[m
[31m-		[m
[31m-		this.largura = imagem.getWidth(null);[m
[31m-		this.altura = imagem.getHeight(null);[m
[31m-	}[m
[31m-	[m
[31m-	public void update() {[m
[31m-		this.x += VELOCIDADE;[m
[31m-		[m
[31m-		if(this.x > ALCANCE)[m
[31m-			isVisible = false;[m
[31m-	}[m
[31m-	[m
[31m-	public Rectangle getBounds() {[m
[31m-		return new Rectangle(x, y, largura, altura);[m
[31m-	}[m
[31m-[m
[31m-	public boolean isVisible() {[m
[31m-		return isVisible;[m
[31m-	}[m
[31m-[m
[31m-	public void setVisible(boolean isVisible) {[m
[31m-		this.isVisible = isVisible;[m
[31m-	}[m
[31m-[m
[31m-	public static int getVELOCIDADE() {[m
[31m-		return VELOCIDADE;[m
[31m-	}[m
[31m-[m
[31m-	public static void setVELOCIDADE(int vELOCIDADE) {[m
[31m-		VELOCIDADE = vELOCIDADE;[m
[31m-	}[m
[31m-[m
[31m-	public int getX() {[m
[31m-		return x;[m
[31m-	}[m
[31m-[m
[31m-	public int getY() {[m
[31m-		return y;[m
[31m-	}[m
[31m-[m
[31m-	public Image getImagem() {[m
[31m-		return imagem;[m
[31m-	}[m
[31m-	[m
[31m-	[m
[31m-	[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background.jpg" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background.jpg"[m
[1mdeleted file mode 100644[m
[1mindex aa9f62f..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background.jpg" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background3.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background3.png"[m
[1mdeleted file mode 100644[m
[1mindex 00c6620..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/background3.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/enemy1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/enemy1.png"[m
[1mdeleted file mode 100644[m
[1mindex 3de2084..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/enemy1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/explosao.wav" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/explosao.wav"[m
[1mdeleted file mode 100644[m
[1mindex e628417..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/explosao.wav" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover-removebg-preview.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover-removebg-preview.png"[m
[1mdeleted file mode 100644[m
[1mindex 50dd300..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover-removebg-preview.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover.jpg" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover.jpg"[m
[1mdeleted file mode 100644[m
[1mindex bf9f295..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/gameover.jpg" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/pngegg.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/pngegg.png"[m
[1mdeleted file mode 100644[m
[1mindex fb36ceb..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/pngegg.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/spacenave1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/spacenave1.png"[m
[1mdeleted file mode 100644[m
[1mindex bcbb159..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/spacenave1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.png" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.png"[m
[1mdeleted file mode 100644[m
[1mindex 8c892aa..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.png" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.wav" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.wav"[m
[1mdeleted file mode 100644[m
[1mindex 23f1db6..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/tiro1.wav" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/trilha.wav" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/trilha.wav"[m
[1mdeleted file mode 100644[m
[1mindex 1a341ff..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Game/src/res/trilha.wav" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/LICENSE" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/LICENSE"[m
[1mdeleted file mode 100644[m
[1mindex 29f81d8..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/LICENSE"[m	
[1m+++ /dev/null[m
[36m@@ -1,201 +0,0 @@[m
[31m-                                 Apache License[m
[31m-                           Version 2.0, January 2004[m
[31m-                        http://www.apache.org/licenses/[m
[31m-[m
[31m-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION[m
[31m-[m
[31m-   1. Definitions.[m
[31m-[m
[31m-      "License" shall mean the terms and conditions for use, reproduction,[m
[31m-      and distribution as defined by Sections 1 through 9 of this document.[m
[31m-[m
[31m-      "Licensor" shall mean the copyright owner or entity authorized by[m
[31m-      the copyright owner that is granting the License.[m
[31m-[m
[31m-      "Legal Entity" shall mean the union of the acting entity and all[m
[31m-      other entities that control, are controlled by, or are under common[m
[31m-      control with that entity. For the purposes of this definition,[m
[31m-      "control" means (i) the power, direct or indirect, to cause the[m
[31m-      direction or management of such entity, whether by contract or[m
[31m-      otherwise, or (ii) ownership of fifty percent (50%) or more of the[m
[31m-      outstanding shares, or (iii) beneficial ownership of such entity.[m
[31m-[m
[31m-      "You" (or "Your") shall mean an individual or Legal Entity[m
[31m-      exercising permissions granted by this License.[m
[31m-[m
[31m-      "Source" form shall mean the preferred form for making modifications,[m
[31m-      including but not limited to software source code, documentation[m
[31m-      source, and configuration files.[m
[31m-[m
[31m-      "Object" form shall mean any form resulting from mechanical[m
[31m-      transformation or translation of a Source form, including but[m
[31m-      not limited to compiled object code, generated documentation,[m
[31m-      and conversions to other media types.[m
[31m-[m
[31m-      "Work" shall mean the work of authorship, whether in Source or[m
[31m-      Object form, made available under the License, as indicated by a[m
[31m-      copyright notice that is included in or attached to the work[m
[31m-      (an example is provided in the Appendix below).[m
[31m-[m
[31m-      "Derivative Works" shall mean any work, whether in Source or Object[m
[31m-      form, that is based on (or derived from) the Work and for which the[m
[31m-      editorial revisions, annotations, elaborations, or other modifications[m
[31m-      represent, as a whole, an original work of authorship. For the purposes[m
[31m-      of this License, Derivative Works shall not include works that remain[m
[31m-      separable from, or merely link (or bind by name) to the interfaces of,[m
[31m-      the Work and Derivative Works thereof.[m
[31m-[m
[31m-      "Contribution" shall mean any work of authorship, including[m
[31m-      the original version of the Work and any modifications or additions[m
[31m-      to that Work or Derivative Works thereof, that is intentionally[m
[31m-      submitted to Licensor for inclusion in the Work by the copyright owner[m
[31m-      or by an individual or Legal Entity authorized to submit on behalf of[m
[31m-      the copyright owner. For the purposes of this definition, "submitted"[m
[31m-      means any form of electronic, verbal, or written communication sent[m
[31m-      to the Licensor or its representatives, including but not limited to[m
[31m-      communication on electronic mailing lists, source code control systems,[m
[31m-      and issue tracking systems that are managed by, or on behalf of, the[m
[31m-      Licensor for the purpose of discussing and improving the Work, but[m
[31m-      excluding communication that is conspicuously marked or otherwise[m
[31m-      designated in writing by the copyright owner as "Not a Contribution."[m
[31m-[m
[31m-      "Contributor" shall mean Licensor and any individual or Legal Entity[m
[31m-      on behalf of whom a Contribution has been received by Licensor and[m
[31m-      subsequently incorporated within the Work.[m
[31m-[m
[31m-   2. Grant of Copyright License. Subject to the terms and conditions of[m
[31m-      this License, each Contributor hereby grants to You a perpetual,[m
[31m-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[31m-      copyright license to reproduce, prepare Derivative Works of,[m
[31m-      publicly display, publicly perform, sublicense, and distribute the[m
[31m-      Work and such Derivative Works in Source or Object form.[m
[31m-[m
[31m-   3. Grant of Patent License. Subject to the terms and conditions of[m
[31m-      this License, each Contributor hereby grants to You a perpetual,[m
[31m-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[31m-      (except as stated in this section) patent license to make, have made,[m
[31m-      use, offer to sell, sell, import, and otherwise transfer the Work,[m
[31m-      where such license applies only to those patent claims licensable[m
[31m-      by such Contributor that are necessarily infringed by their[m
[31m-      Contribution(s) alone or by combination of their Contribution(s)[m
[31m-      with the Work to which such Contribution(s) was submitted. If You[m
[31m-      institute patent litigation against any entity (including a[m
[31m-      cross-claim or counterclaim in a lawsuit) alleging that the Work[m
[31m-      or a Contribution incorporated within the Work constitutes direct[m
[31m-      or contributory patent infringement, then any patent licenses[m
[31m-      granted to You under this License for that Work shall terminate[m
[31m-      as of the date such litigation is filed.[m
[31m-[m
[31m-   4. Redistribution. You may reproduce and distribute copies of the[m
[31m-      Work or Derivative Works thereof in any medium, with or without[m
[31m-      modifications, and in Source or Object form, provided that You[m
[31m-      meet the following conditions:[m
[31m-[m
[31m-      (a) You must give any other recipients of the Work or[m
[31m-          Derivative Works a copy of this License; and[m
[31m-[m
[31m-      (b) You must cause any modified files to carry prominent notices[m
[31m-          stating that You changed the files; and[m
[31m-[m
[31m-      (c) You must retain, in the Source form of any Derivative Works[m
[31m-          that You distribute, all copyright, patent, trademark, and[m
[31m-          attribution notices from the Source form of the Work,[m
[31m-          excluding those notices that do not pertain to any part of[m
[31m-          the Derivative Works; and[m
[31m-[m
[31m-      (d) If the Work includes a "NOTICE" text file as part of its[m
[31m-          distribution, then any Derivative Works that You distribute must[m
[31m-          include a readable copy of the attribution notices contained[m
[31m-          within such NOTICE file, excluding those notices that do not[m
[31m-          pertain to any part of the Derivative Works, in at least one[m
[31m-          of the following places: within a NOTICE text file distributed[m
[31m-          as part of the Derivative Works; within the Source form or[m
[31m-          documentation, if provided along with the Derivative Works; or,[m
[31m-          within a display generated by the Derivative Works, if and[m
[31m-          wherever such third-party notices normally appear. The contents[m
[31m-          of the NOTICE file are for informational purposes only and[m
[31m-          do not modify the License. You may add Your own attribution[m
[31m-          notices within Derivative Works that You distribute, alongside[m
[31m-          or as an addendum to the NOTICE text from the Work, provided[m
[31m-          that such additional attribution notices cannot be construed[m
[31m-          as modifying the License.[m
[31m-[m
[31m-      You may add Your own copyright statement to Your modifications and[m
[31m-      may provide additional or different license terms and conditions[m
[31m-      for use, reproduction, or distribution of Your modifications, or[m
[31m-      for any such Derivative Works as a whole, provided Your use,[m
[31m-      reproduction, and distribution of the Work otherwise complies with[m
[31m-      the conditions stated in this License.[m
[31m-[m
[31m-   5. Submission of Contributions. Unless You explicitly state otherwise,[m
[31m-      any Contribution intentionally submitted for inclusion in the Work[m
[31m-      by You to the Licensor shall be under the terms and conditions of[m
[31m-      this License, without any additional terms or conditions.[m
[31m-      Notwithstanding the above, nothing herein shall supersede or modify[m
[31m-      the terms of any separate license agreement you may have executed[m
[31m-      with Licensor regarding such Contributions.[m
[31m-[m
[31m-   6. Trademarks. This License does not grant permission to use the trade[m
[31m-      names, trademarks, service marks, or product names of the Licensor,[m
[31m-      except as required for reasonable and customary use in describing the[m
[31m-      origin of the Work and reproducing the content of the NOTICE file.[m
[31m-[m
[31m-   7. Disclaimer of Warranty. Unless required by applicable law or[m
[31m-      agreed to in writing, Licensor provides the Work (and each[m
[31m-      Contributor provides its Contributions) on an "AS IS" BASIS,[m
[31m-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or[m
[31m-      implied, including, without limitation, any warranties or conditions[m
[31m-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A[m
[31m-      PARTICULAR PURPOSE. You are solely responsible for determining the[m
[31m-      appropriateness of using or redistributing the Work and assume any[m
[31m-      risks associated with Your exercise of permissions under this License.[m
[31m-[m
[31m-   8. Limitation of Liability. In no event and under no legal theory,[m
[31m-      whether in tort (including negligence), contract, or otherwise,[m
[31m-      unless required by applicable law (such as deliberate and grossly[m
[31m-      negligent acts) or agreed to in writing, shall any Contributor be[m
[31m-      liable to You for damages, including any direct, indirect, special,[m
[31m-      incidental, or consequential damages of any character arising as a[m
[31m-      result of this License or out of the use or inability to use the[m
[31m-      Work (including but not limited to damages for loss of goodwill,[m
[31m-      work stoppage, computer failure or malfunction, or any and all[m
[31m-      other commercial damages or losses), even if such Contributor[m
[31m-      has been advised of the possibility of such damages.[m
[31m-[m
[31m-   9. Accepting Warranty or Additional Liability. While redistributing[m
[31m-      the Work or Derivative Works thereof, You may choose to offer,[m
[31m-      and charge a fee for, acceptance of support, warranty, indemnity,[m
[31m-      or other liability obligations and/or rights consistent with this[m
[31m-      License. However, in accepting such obligations, You may act only[m
[31m-      on Your own behalf and on Your sole responsibility, not on behalf[m
[31m-      of any other Contributor, and only if You agree to indemnify,[m
[31m-      defend, and hold each Contributor harmless for any liability[m
[31m-      incurred by, or claims asserted against, such Contributor by reason[m
[31m-      of your accepting any such warranty or additional liability.[m
[31m-[m
[31m-   END OF TERMS AND CONDITIONS[m
[31m-[m
[31m-   APPENDIX: How to apply the Apache License to your work.[m
[31m-[m
[31m-      To apply the Apache License to your work, attach the following[m
[31m-      boilerplate notice, with the fields enclosed by brackets "[]"[m
[31m-      replaced with your own identifying information. (Don't include[m
[31m-      the brackets!)  The text should be enclosed in the appropriate[m
[31m-      comment syntax for the file format. We also recommend that a[m
[31m-      file or class name and description of purpose be included on the[m
[31m-      same "printed page" as the copyright notice for easier[m
[31m-      identification within third-party archives.[m
[31m-[m
[31m-   Copyright [yyyy] [name of copyright owner][m
[31m-[m
[31m-   Licensed under the Apache License, Version 2.0 (the "License");[m
[31m-   you may not use this file except in compliance with the License.[m
[31m-   You may obtain a copy of the License at[m
[31m-[m
[31m-       http://www.apache.org/licenses/LICENSE-2.0[m
[31m-[m
[31m-   Unless required by applicable law or agreed to in writing, software[m
[31m-   distributed under the License is distributed on an "AS IS" BASIS,[m
[31m-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m-   See the License for the specific language governing permissions and[m
[31m-   limitations under the License.[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Planejamento de Desenvolvimento.pdf" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Planejamento de Desenvolvimento.pdf"[m
[1mdeleted file mode 100644[m
[1mindex 929e4a8..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/Planejamento de Desenvolvimento.pdf"[m	
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-Etapa 1 (30/10-31/10): ConcepÃ§Ã£o e Planejamento[m
[31m-    ï· DefiniÃ§Ã£o da ideia do jogo: Qual Ã© o conceito central?[m
[31m-    ï· CriaÃ§Ã£o de um esboÃ§o ou design inicial do jogo.[m
[31m-    ï· Listagem dos recursos que vocÃª acredita que precisarÃ¡.[m
[31m-    ï· Estabelecimento de metas e objetivos do projeto.[m
[31m-[m
[31m-Etapa 2 (01/11): ConfiguraÃ§Ã£o do Ambiente de Desenvolvimento[m
[31m-    ï· InstalaÃ§Ã£o das ferramentas de desenvolvimento Java, como Eclipse ou IntelliJ IDEA.[m
[31m-    ï· ConfiguraÃ§Ã£o de um projeto Java para o desenvolvimento do jogo.[m
[31m-    ï· InstalaÃ§Ã£o e configuraÃ§Ã£o de uma biblioteca grÃ¡fica, "libGDX."[m
[31m-[m
[31m-Etapa 3 (02/11-04/11): Aprendizado e Prototipagem RÃ¡pida[m
[31m-    ï· Estudo de recursos e tutoriais relacionados ao desenvolvimento de jogos 2D em[m
[31m-         Java.[m
[31m-    ï· InÃ­cio da criaÃ§Ã£o de um protÃ³tipo muito bÃ¡sico do jogo.[m
[31m-    ï· Foco em aspectos fundamentais, como renderizaÃ§Ã£o de grÃ¡ficos, controle de[m
[31m-         personagem e detecÃ§Ã£o de colisÃµes.[m
[31m-[m
[31m-Etapa 4 (05/11 â 06/11): RevisÃ£o e Planejamento Adicional[m
[31m-    ï· AvaliaÃ§Ã£o do progresso atÃ© agora.[m
[31m-    ï· IdentificaÃ§Ã£o das Ã¡reas que precisam de mais trabalho.[m
[31m-    ï· Refinamento do design do jogo com base no protÃ³tipo.[m
[31m-    ï· CriaÃ§Ã£o de um plano para a prÃ³xima semana de desenvolvimento.[m
[31m-[m
[31m-Etapa 5 (06/11-07/12): PrÃ³ximos Passos e PreparaÃ§Ã£o[m
[31m-    ï· InÃ­cio do desenvolvimento dos principais elementos do jogo, como personagens,[m
[31m-         inimigos, cenÃ¡rios, etc.[m
[31m-    ï· ImplementaÃ§Ã£o dos sistemas de jogo, como pontuaÃ§Ã£o, nÃ­veis ou mecÃ¢nicas de jogo[m
[31m-         especÃ­ficas.[m
[31m-[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/README.md" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/README.md"[m
[1mdeleted file mode 100644[m
[1mindex 14731ae..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/arcade-game-poo/README.md"[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-*PROJETO FINAL*[m
[31m-*DISCIPLINA DE POO - ProfÂ° Lucas Sousa*[m
[31m-[m
[31m-Crie um jogo estilo Super Nitendo. O jogo deverÃ¡ ter possibilidade de z-players.[m
[31m-[m
[31m-As categorias podem ser:[m
[31m-[m
[31m-Luta (Estilo Mortal Kombat);[m
[31m-Corrida;[m
[31m-Jogos de Nave e InvasÃ£o AlienÃ­gena;[m
[31m-RPG;[m
[31m-ConstruÃ§Ã£o:[m
[31m-[m
[31m-O jogo deverÃ¡ ser construÃ­do utilizando as bibliotecas de interface grÃ¡fica do Java: . JFrame ou similares;[m
[31m-Os personagens e elementos deverÃ£o ser construÃ­dos utilizando skins. Caso necessÃ¡rio, a equipe deverÃ¡ criar esses elementos;[m
[31m-Os repositÃ³rios deverÃ£o ser pÃºblicos e os links enviados p/ lucas.sousa@ifce.edu.br ;[m
[31m-As equipes deverÃ£o ter no mÃ¡ximo 4 membros;[m
[31m-EntregÃ¡veis:[m
[31m-[m
[31m-! Diagrama de classes; ! RelatÃ³rio de desenvolvimento, apresentando um relato da construÃ§Ã£o e atividades realizadas;[m
[31m-[m
[31m-Cronograma:[m
[31m-[m
[31m-31/10/2023 - Cronograma Previsto de atividades e apresentaÃ§Ã£o do jogo que serÃ¡ construÃ­do;[m
[31m-16/11/2023 â Diagrama de classes e parcial do cÃ³digo (ApresentaÃ§Ã£o);[m
[31m-12/07/2023 - ApresentaÃ§Ã£o Final do Projeto e entrega do relatÃ³rio;[m
[31m-ObservaÃ§Ãµes:[m
[31m-[m
[31m-Os cÃ³digos deverÃ£o ser mantidos em um repositÃ³rio Github com um projeto e gerenciamento de atividades seguindo o kanban: . fazer / fazer / dong[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface"[m
[1mnew file mode 160000[m
[1mindex 0000000..e308d07[m
[1m--- /dev/null[m
[1m+++ "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface"[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit e308d0779a6c685dfeccb22dd7a9a9c690a92f23[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/README.md" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/README.md"[m
[1mdeleted file mode 100644[m
[1mindex e107ea1..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/README.md"[m	
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-# exercicio-interface[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.class"[m
[1mdeleted file mode 100644[m
[1mindex 336cfe6..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.java"[m
[1mdeleted file mode 100644[m
[1mindex 6717bc7..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Main.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-public class Main {[m
[31m-    public static void main(String[] args)[m
[31m-    {[m
[31m-        Teste t1 = new Teste();[m
[31m-        [m
[31m-    }[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.class"[m
[1mdeleted file mode 100644[m
[1mindex 83c3004..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.java"[m
[1mdeleted file mode 100644[m
[1mindex b8346d3..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/exercicio-interface/exercicio-interface/Teste.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-import javax.swing.JFrame;[m
[31m-import javax.swing.event.MouseInputListener;[m
[31m-[m
[31m-import java.awt.event.MouseEvent;[m
[31m-import java.awt.event.MouseMotionListener;[m
[31m-[m
[31m-[m
[31m-public class Teste extends JFrame implements MouseMotionListener, MouseInputListener {[m
[31m-    [m
[31m-    public Teste(){[m
[31m-        addMouseListener(this);[m
[31m-        setSize(1360, 768); [m
[31m-        setVisible(true);[m
[31m-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);[m
[31m-        addMouseMotionListener(this);[m
[31m-        setLocationRelativeTo(null);[m
[31m-    }[m
[31m-    [m
[31m-    public void mouseDragged(MouseEvent e)[m
[31m-    {[m
[31m-        /*System.out.println("X = " + e.getClickCount());[m
[31m-        System.out.println("Y = " + e.getY());[m
[31m-    }[m
[31m-    public void mouseMoved(MouseEvent e)[m
[31m-    {[m
[31m-        /*System.out.println("X = " + e.getClickCount());[m
[31m-        System.out.println("X = " + e.getX());[m
[31m-        System.out.println("Y = " + e.getY());*/[m
[31m-    }[m
[31m-[m
[31m-    public void mouseClicked(MouseEvent e)[m
[31m-    {[m
[31m-        System.out.println("X = " + e.getX());[m
[31m-        System.out.println("X = " + e.getY());[m
[31m-    }[m
[31m-[m
[31m-    public void mousePressed(MouseEvent e){[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    public void mouseEntered(MouseEvent e){[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    public void mouseReleased(MouseEvent e){[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    public void mouseExited(MouseEvent e){[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void mouseMoved(MouseEvent e) {[m
[31m-        // TODO Auto-generated method stub[m
[31m-        [m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    [m
[31m-[m
[31m-[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste"[m
[1mnew file mode 160000[m
[1mindex 0000000..207dcf4[m
[1m--- /dev/null[m
[1m+++ "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste"[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 207dcf4029ba8843c6ccf04376f192d1e221e06b-dirty[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.class"[m
[1mdeleted file mode 100644[m
[1mindex 31e2db0..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.java"[m
[1mdeleted file mode 100644[m
[1mindex 94e10d8..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Fase.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-import java.awt.Color;[m
[31m-import java.awt.Dimension;[m
[31m-import java.awt.FlowLayout;[m
[31m-[m
[31m-import javax.swing.ImageIcon;[m
[31m-import javax.swing.JLabel;[m
[31m-import javax.swing.JPanel;[m
[31m-public class Fase extends JPanel{[m
[31m-    [m
[31m-[m
[31m-[m
[31m-    public Fase(){[m
[31m-[m
[31m-        setPreferredSize(new Dimension(1368, 768));[m
[31m-        setVisible(true);[m
[31m-        setFocusable(true);[m
[31m-        setBackground(Color.BLACK);[m
[31m-        JLabel background = new JLabel(new ImageIcon("c:/Users/verid/Documents/Pasta do Levi/Imagens/fundo.jpg"));[m
[31m-		background.setLayout(new FlowLayout());[m
[31m-        background.setText("Oi tudo bem?");[m
[31m-        add(background);[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.class"[m
[1mdeleted file mode 100644[m
[1mindex 199f9dd..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.java"[m
[1mdeleted file mode 100644[m
[1mindex 1921f1b..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Main.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-public class Main {[m
[31m-	public static void main(String[] args) {[m
[31m-		Teste jf = new Teste();[m
[31m-		Fase j = new Fase();[m
[31m-		jf.add(j);[m
[31m-	}[m
[31m-[m
[31m-}[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.class" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.class"[m
[1mdeleted file mode 100644[m
[1mindex 2575cc3..0000000[m
Binary files "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.class" and /dev/null differ
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.java"[m
[1mdeleted file mode 100644[m
[1mindex f912e57..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/interface-grafica-teste/Teste.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-import javax.swing.JFrame;[m
[31m-public class Teste extends JFrame{[m
[31m-	public Teste() {[m
[31m-		setTitle("Coisa");[m
[31m-		setSize(1368, 768);[m
[31m-		setDefaultCloseOperation(EXIT_ON_CLOSE);[m
[31m-		setResizable(false);[m
[31m-		setVisible(true);[m
[31m-		setLocationRelativeTo(null);[m
[31m-		[m
[31m-	}[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java"[m
[1mnew file mode 160000[m
[1mindex 0000000..624ef6b[m
[1m--- /dev/null[m
[1m+++ "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java"[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 624ef6ba2daad4b820bfa86c89eb01a6343ec370[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/Lampada.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/Lampada.java"[m
[1mdeleted file mode 100644[m
[1mindex 3a6f36f..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/Lampada.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-public class Lampada{[m
[31m-    private boolean ligada;[m
[31m-[m
[31m-    public void setLigada(boolean ligada){[m
[31m-        this.ligada = ligada;[m
[31m-    }[m
[31m-    [m
[31m-    public boolean getLigada(){[m
[31m-        return this.ligada;[m
[31m-    }[m
[31m-[m
[31m-    public void ligar(boolean ligada){[m
[31m-        this.ligada = true;[m
[31m-    }[m
[31m-[m
[31m-    public void desligar(boolean ligada){[m
[31m-        this.ligada = false;[m
[31m-    }[m
[31m-[m
[31m-    public void mostrarStatus(boolean ligada){[m
[31m-        if (this.ligada == true){[m
[31m-            System.out.println("A lampada estÃ¡ ligada");[m
[31m-        }else{[m
[31m-            System.out.println("A lÃ¢mpada estÃ¡ desligada");[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public String toString()[m
[31m-    {[m
[31m-        return "Status da LÃ¢mpada:  " + this.ligada;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/TestaLampada.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/TestaLampada.java"[m
[1mdeleted file mode 100644[m
[1mindex 658d97a..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/lampada_java/TestaLampada.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-public class TestaLampada{[m
[31m-    public static void main(String[] args){[m
[31m-        Lampada l1 = new Lampada();[m
[31m-        l1.ligar(l1.getLigada());[m
[31m-        l1.mostrarStatus(l1.getLigada());[m
[31m-        System.out.println(l1);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java"[m
[1mnew file mode 160000[m
[1mindex 0000000..758ff87[m
[1m--- /dev/null[m
[1m+++ "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java"[m	
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 758ff8721424e4d1a427626c593fda3f47bb1ae5[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/Retangulo.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/Retangulo.java"[m
[1mdeleted file mode 100644[m
[1mindex a58e897..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/Retangulo.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,46 +0,0 @@[m
[31m-public class Retangulo{[m
[31m-    private int altura;[m
[31m-    private int largura;[m
[31m-[m
[31m-public void setAltura(int altura){[m
[31m-    this.altura = altura;[m
[31m-}[m
[31m-[m
[31m-public int getAltura()[m
[31m-{[m
[31m-    return this.altura;[m
[31m-}[m
[31m-[m
[31m-public void setLargura(int largura)[m
[31m-{[m
[31m-    this.largura = largura;[m
[31m-}[m
[31m-[m
[31m-public int getLargura()[m
[31m-{[m
[31m-    return this.largura;[m
[31m-}[m
[31m-[m
[31m-public void criaRetangulo(int altura, int largura){[m
[31m-[m
[31m-    this.altura = altura;[m
[31m-    this.largura = largura;[m
[31m-[m
[31m-}[m
[31m-[m
[31m-public void criaRetangulo(int largura, double angulo){[m
[31m-    this.largura = largura;[m
[31m-    this.altura = (int) (Math.tan(angulo) * (double) this.largura);[m
[31m-[m
[31m-}[m
[31m-[m
[31m-public void criaRetangulo(double angulo, int diagonal){[m
[31m-    this.altura = (int) (Math.sin(angulo) * (double)diagonal); //precisaria usar this nesse mÃ©todo? mesmo altura e largura nÃ£o sendo parÃ¢metros?[m
[31m-    this.largura = (int) (Math.cos(angulo) * (double)diagonal);[m
[31m-}[m
[31m-[m
[31m-public void criaRetangulo(double altura, double diagonal){[m
[31m-    this.altura = (int) altura;[m
[31m-    this.largura = (int) (Math.sqrt(Math.pow((int) diagonal, 2) - Math.pow(altura, 2)));[m
[31m-}[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/TestaRetangulo.java" "b/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/TestaRetangulo.java"[m
[1mdeleted file mode 100644[m
[1mindex afcfc7d..0000000[m
[1m--- "a/Atividades/S2/Programa\303\247\303\243o Orientada a Objetos/retangulo_java/TestaRetangulo.java"[m	
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-import java.lang.Math;[m
[31m-public class TestaRetangulo{[m
[31m-    public static void main(String[] args){[m
[31m-        Retangulo r1 = new Retangulo();[m
[31m-        Retangulo r2 = new Retangulo();[m
[31m-        r2.setAltura(10);[m
[31m-        System.out.println(r2.getAltura());[m
[31m-        r2.criaRetangulo(2, 45.0);[m
[31m-        System.out.println(r2.getAltura());[m
[31m-        System.out.println(Math.tan(45.0) * 2);[m
[31m-        //pq tg de 45 retorna 1.6197751905438615?[m
[31m-        [m
[31m-    }[m
[31m-}[m
[31m-[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/avaliacao1/av1.c b/Atividades/S3/Estrutura de Dados/avaliacao1/av1.c[m
[1mnew file mode 100644[m
[1mindex 0000000..9aa61a8[m
[1m--- /dev/null[m
[1m+++ b/Atividades/S3/Estrutura de Dados/avaliacao1/av1.c[m	
[36m@@ -0,0 +1,308 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <string.h>[m
[32m+[m
[32m+[m[32m#define TRUE 1[m
[32m+[m[32m#define FALSE 0[m
[32m+[m
[32m+[m[32mtypedef unsigned char BOOL;[m
[32m+[m
[32m+[m[32mtypedef struct ItemLista {[m
[32m+[m[32m    void              *data;[m
[32m+[m[32m    int                size;[m
[32m+[m[32m    struct TItemLista *proximoItem;[m
[32m+[m[32m    struct TItemLista *anteriorItem;[m
[32m+[m[32m} TItemLista;[m
[32m+[m
[32m+[m[32mtypedef struct ListaEncadeada{[m
[32m+[m[32m    int               n;[m
[32m+[m[32m    int        sizeItem;[m
[32m+[m[32m    TItemLista *current;[m
[32m+[m[32m    TItemLista   *first;[m
[32m+[m[32m    TItemLista    *last;[m
[32m+[m[32m    BOOL ehCircular;[m
[32m+[m[32m} TListaEncadeada;[m
[32m+[m
[32m+[m[32m// prototipos das funcoes[m
[32m+[m[32mTListaEncadeada *TListaEncadeada_create(TListaEncadeada *lista,int sizeItem, BOOL ehCircular);[m
[32m+[m[32mvoid TListaEncadeada_destroy(TListaEncadeada *lista);[m
[32m+[m[32mBOOL TListaEncadeada_adicionar(TListaEncadeada *lista,void *data);[m
[32m+[m[32mBOOL TListaEncadeada_removerUltimo(TListaEncadeada *lista);[m
[32m+[m[32mTItemLista *TListaEncadeada_goFirst(TListaEncadeada *lista);[m
[32m+[m[32mTItemLista *TListaEncadeada_goLast(TListaEncadeada *lista);[m
[32m+[m[32mTItemLista *TListaEncadeada_next(TListaEncadeada *lista);[m
[32m+[m[32mvoid TListaEncadeada_print(TListaEncadeada *lista);[m
[32m+[m
[32m+[m[32mTItemLista *TItemLista_create(TItemLista *item,void *data, int size);[m
[32m+[m[32mvoid TItemLista_destroy(TItemLista *item);[m
[32m+[m[32mvoid TItemLista_print(TItemLista *item);[m
[32m+[m
[32m+[m[32mTItemLista *TItemLista_create(TItemLista *item,void *data, int size)[m
[32m+[m[32m{[m
[32m+[m[32m    // alocando espaco para item[m
[32m+[m[32m    item = malloc(sizeof(TItemLista));[m
[32m+[m[32m    if(item==NULL){[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    item->data = malloc(size);[m
[32m+[m[32m    // alocando espaco para dado[m
[32m+[m[32m    if(item->data==NULL){[m
[32m+[m[32m        free(item);[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    // copiar o dado para dentro da area de dados do item[m
[32m+[m[32m    item->size = size;[m
[32m+[m[32m    memcpy(item->data,data,size);[m
[32m+[m[32m    item->proximoItem = NULL;[m
[32m+[m[32m    item->anteriorItem = NULL;[m
[32m+[m[32m}[m
[32m+[m[32mvoid TItemLista_destroy(TItemLista *item)[m
[32m+[m[32m{[m
[32m+[m[32m    free(item->data);[m
[32m+[m[32m    item->data = NULL;[m
[32m+[m[32m    free(item);[m
[32m+[m[32m    item = NULL;[m
[32m+[m[32m}[m
[32m+[m[32mvoid TItemLista_print(TItemLista *item)[m
[32m+[m[32m{[m
[32m+[m[32m    char buffer[1000];[m
[32m+[m[32m    char dataByte[4];[m
[32m+[m[32m    char *point;[m
[32m+[m[32m    int i;[m
[32m+[m[41m   [m
[32m+[m[32m    printf("---------------------------------------\n");[m
[32m+[m[32m    printf("Ponteiro item : %x\n",item);[m
[32m+[m[32m    printf("Proximo Item  : %x\n",item->proximoItem);[m
[32m+[m[41m   [m
[32m+[m[32m    strcpy(buffer,"");[m
[32m+[m[32m    point = item->data;[m
[32m+[m[32m    for(i=0;i<item->size;i++){[m
[32m+[m[32m        sprintf(dataByte,"%02x ",point[i]);[m
[32m+[m[32m        strcat(buffer,dataByte);[m
[32m+[m[32m    }[m
[32m+[m[32m    printf("Data : %s\n",buffer);[m
[32m+[m[32m}[m
[32m+[m[32m/*------------------------------------------------------------------------------*/[m
[32m+[m[32m// Codigo dos metodos da lista[m
[32m+[m
[32m+[m[32mTListaEncadeada *TListaEncadeada_create(TListaEncadeada *lista,int sizeItem, BOOL ehCircular)[m
[32m+[m[32m{[m
[32m+[m[32m    lista = malloc(sizeof(TListaEncadeada));[m
[32m+[m[32m    if(lista==NULL){[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    // atribuindo as propriedades da Lista na condiÃ§ao inicial sem elementos[m
[32m+[m[32m    lista->n = 0;[m
[32m+[m[32m    lista->sizeItem = sizeItem;[m
[32m+[m[32m    lista->current = NULL;[m
[32m+[m[32m    lista->first = NULL;[m
[32m+[m[32m    lista->ehCircular = ehCircular;[m
[32m+[m[41m    [m
[32m+[m[32m    return lista;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid TListaEncadeada_destroy(TListaEncadeada *lista)[m
[32m+[m[32m{[m
[32m+[m[32m    // Remove todos os elementos da lista[m
[32m+[m[32m    while ( TListaEncadeada_removerUltimo(lista));[m
[32m+[m
[32m+[m[32m    free(lista);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTItemLista *TListaEncadeada_goLast(TListaEncadeada *lista)[m
[32m+[m[32m{[m
[32m+[m[32m    lista->current = lista->last;[m
[32m+[m[32m    return lista->last;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL TListaEncadeada_adicionar(TListaEncadeada *lista,void *data)[m
[32m+[m[32m{[m
[32m+[m[32m    TItemLista *item,*last,*penultimo;[m
[32m+[m[32m    last = TListaEncadeada_goLast(lista);[m
[32m+[m
[32m+[m[32m    if((item = TItemLista_create(item,data, lista->sizeItem))==NULL){[m
[32m+[m[32m        return FALSE;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(lista->n == 0){[m
[32m+[m[32m        // caso lista esta vazia[m
[32m+[m[32m        lista->first = item;[m
[32m+[m[32m        lista->last = item;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (lista->ehCircular == TRUE){[m
[32m+[m[32m        // LEVI: caso que a lista ja tem elementos e Ã© circular[m
[32m+[m[32m        // LEVI: o proximo item do item recÃ©m adicionado Ã© o primeiro[m
[32m+[m[32m        last->proximoItem = item;[m
[32m+[m[32m        item->proximoItem = lista->first;[m
[32m+[m[32m    }[m
[32m+[m[32m    else{[m
[32m+[m[32m        //LEVI: caso que a lista tem elementos e nÃ£o Ã© circular[m
[32m+[m[32m        //LEVI: o prÃ³ximo item do item recÃ©m adicionado Ã© o nulo[m
[32m+[m[32m        last->proximoItem = item;[m
[32m+[m[32m    }[m
[32m+[m[32m    // atualiza o corrente[m
[32m+[m[32m    lista->current = item;[m
[32m+[m[32m    lista->last=item;[m
[32m+[m[32m    // incrementa o numero de elemento[m
[32m+[m[32m    lista->n++;[m
[32m+[m
[32m+[m[32m}[m
[32m+[m[32mTItemLista *TListaEncadeada_goFirst(TListaEncadeada *lista){[m
[32m+[m[32m    lista->current = lista->first;[m
[32m+[m[32m    return lista->first;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTItemLista *TListaEncadeada_next(TListaEncadeada *lista){[m
[32m+[m[32m    TItemLista *item;[m
[32m+[m
[32m+[m[32m    item = lista->current;[m
[32m+[m[32m    //LEVI: caso que a lista Ã© circular[m
[32m+[m[32m    if(lista->ehCircular == TRUE){[m
[32m+[m[32m        lista->current = item->proximoItem;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //LEVI: caso lista nÃ£o circular[m
[32m+[m[32m    else{[m
[32m+[m[32m        if(item->proximoItem != NULL)[m
[32m+[m[32m            lista->current = item->proximoItem;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return lista->current;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTItemLista *TListaEncadeada_goPrev(TListaEncadeada *lista){[m
[32m+[m[32m    //LEVI: essa funÃ§Ã£o pressupÃµe que o usuÃ¡rio a utilize apenas quando o item[m
[32m+[m[32m    //corrente tiver um item na posiÃ§Ã£o anterior, e nÃ£o verifica essa condiÃ§Ã£o[m
[32m+[m[32m    TItemLista *item = TListaEncadeada_goFirst(lista);[m
[32m+[m
[32m+[m[32m    if(lista->n == 1)[m
[32m+[m[32m        return lista->first;[m
[32m+[m
[32m+[m[32m    //LEVI: devo tratar o caso com lista->n == 1, pois nesse caso especÃ­fico o[m
[32m+[m[32m    //nÃ£o entra no for[m
[32m+[m[32m    for(int i = 0; i<(lista->n)-1; i++){[m
[32m+[m[32m        if(((lista->n-1) - i) == 1){[m
[32m+[m[32m            lista->current = item;[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m[32m        item = TListaEncadeada_next(lista);[m
[32m+[m[32m    }[m
[32m+[m[32m    return lista->current;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL TListaEncadeada_removerUltimo(TListaEncadeada *lista){[m
[32m+[m[32m    TItemLista *corrente = TListaEncadeada_goFirst(lista);[m
[32m+[m[32m    TItemLista *ultimo = TListaEncadeada_goLast(lista);[m
[32m+[m
[32m+[m[32m    //caso nÃ£o tenha elementos na lista[m
[32m+[m[32m    if(lista->n == 0)[m
[32m+[m[32m        return FALSE;[m
[32m+[m[41m    [m
[32m+[m[32m    lista->last = TListaEncadeada_goPrev(lista);[m
[32m+[m[32m    TItemLista_destroy(ultimo);[m
[32m+[m[32m    if(lista->ehCircular == TRUE){[m
[32m+[m[32m        lista->last->proximoItem = lista->first;[m
[32m+[m[32m    }else{[m
[32m+[m[32m        lista->last->proximoItem = NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    lista->n--;[m
[32m+[m[32m    return TRUE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid TListaEncadeada_print(TListaEncadeada *lista){[m
[32m+[m[32m    int i;[m
[32m+[m[32m    TItemLista *item;[m
[32m+[m[32m    printf("Tamanho : %d\n",lista->n);[m
[32m+[m[32m    printf("Tamanho Item : %d\n",lista->sizeItem);[m
[32m+[m[32m    printf("First   : %x\n",lista->first);[m
[32m+[m[32m    printf("current : %x\n",lista->current);[m
[32m+[m
[32m+[m[32m    item = TListaEncadeada_goFirst(lista);[m
[32m+[m[32m    for(i=0; i < lista->n; i++){[m
[32m+[m[32m        TItemLista_print(item);[m
[32m+[m[32m        item= TListaEncadeada_next(lista);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mint main()[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    //UPDATE: adaptei as funÃ§Ãµes create, add, next, removerUltimo e sÃ³ eu acho[m
[32m+[m[32m    //depois testar elas direitinho e resolver bug se tiver, sÃ³ fiz a questÃ£o da[m
[32m+[m[32m    //da verificaÃ§Ã£o de ser circular ou nÃ£o[m
[32m+[m
[32m+[m
[32m+[m[32m    TItemLista       *Item;[m
[32m+[m[32m    int              a,b,c;[m
[32m+[m[32m    TListaEncadeada *lista;[m
[32m+[m
[32m+[m[32m    // Teste do ItemLista[m
[32m+[m[32m    a =1; b =2; c =3;[m
[32m+[m[32m    if ( (Item = TItemLista_create(Item,&a, sizeof(a)))==NULL){[m
[32m+[m[32m        printf("Nao foi possivel criar o Item da lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TItemLista_print(Item);[m
[32m+[m[32m    TItemLista_destroy(Item);[m
[32m+[m
[32m+[m[32m    // testando a lista TListaEncadeada[m
[32m+[m[32m    lista = TListaEncadeada_create(&lista,sizeof(int), FALSE);[m
[32m+[m[32m    if(lista == NULL){[m
[32m+[m[32m        printf("NÃ£o foi possivel criar a lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Adiciona elemento 1 na lista\n");[m
[32m+[m[32m    // adiciona elementos na lista[m
[32m+[m[32m    if(TListaEncadeada_adicionar(lista,&a)==FALSE){[m
[32m+[m[32m        printf("NÃ£o foi possivel adicionar elemento a lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Adiciona elemento 2 na lista\n");[m
[32m+[m[32m    if(TListaEncadeada_adicionar(lista,&b)==FALSE){[m
[32m+[m[32m        printf("NÃ£o foi possivel adicionar elemento a lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Adiciona elemento 3 na lista\n");[m
[32m+[m[32m    if(TListaEncadeada_adicionar(lista,&c)==FALSE){[m
[32m+[m[32m        printf("NÃ£o foi possivel adicionar elemento a lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    // testar o remover[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Remove ultimo elemento da lista\n");[m
[32m+[m[32m    if(TListaEncadeada_removerUltimo(lista)==FALSE){[m
[32m+[m[32m        printf("Erro ao remover elemento da lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Remove ultimo elemento da lista\n");[m
[32m+[m[32m    if(TListaEncadeada_removerUltimo(lista)==FALSE){[m
[32m+[m[32m        printf("Erro ao remover elemento da lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Remove ultimo elemento da lista\n");[m
[32m+[m[32m    if(TListaEncadeada_removerUltimo(lista)==FALSE){[m
[32m+[m[32m        printf("Erro ao remover elemento da lista\n");[m
[32m+[m[32m        exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m[32m    printf("\n**********************************\n");[m
[32m+[m[32m    printf("Tenta remover ultimo elemento de lista vazia\n");[m
[32m+[m
[32m+[m[32m    if(TListaEncadeada_removerUltimo(lista)==FALSE){[m
[32m+[m[32m        printf("Erro ao remover elemento da lista\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TListaEncadeada_print(lista);[m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/avaliacao1/output/av1.exe b/Atividades/S3/Estrutura de Dados/avaliacao1/output/av1.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..42b7d4a[m
Binary files /dev/null and b/Atividades/S3/Estrutura de Dados/avaliacao1/output/av1.exe differ
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio-arvore-binaria/arvore-binaria.c b/Atividades/S3/Estrutura de Dados/exercicio-arvore-binaria/arvore-binaria.c[m
[1mnew file mode 100644[m
[1mindex 0000000..fc53b51[m
[1m--- /dev/null[m
[1m+++ b/Atividades/S3/Estrutura de Dados/exercicio-arvore-binaria/arvore-binaria.c[m	
[36m@@ -0,0 +1,283 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <string.h>[m
[32m+[m
[32m+[m[32mtypedef unsigned char byte;[m
[32m+[m[32mtypedef byte boolean;[m
[32m+[m
[32m+[m[32m#define TRUE 1[m
[32m+[m[32m#define FALSE 0[m
[32m+[m
[32m+[m[32m//Estruturas[m
[32m+[m[32mtypedef struct No{[m
[32m+[m[32m    int size;[m[41m [m
[32m+[m[32m    int *dado;[m
[32m+[m[32m    struct No *left;[m
[32m+[m[32m    struct No *right;[m
[32m+[m[32m    struct No *pai;[m
[32m+[m[32m    int nivel;[m
[32m+[m[32m}TNo;[m
[32m+[m
[32m+[m[32mtypedef struct BinaryTree {[m
[32m+[m[32m    TNo *raiz;[m
[32m+[m[32m    int sizeNo;[m
[32m+[m[32m    int nivel;[m
[32m+[m[32m    int nelem;[m
[32m+[m[32m}TBinaryTree;[m
[32m+[m
[32m+[m[32m//ProtÃ³tipos[m
[32m+[m[32mTNo     *TNo_create(TNo *no, int *dado, int size);[m
[32m+[m[32mvoid     TNo_destroy(TNo *no);[m
[32m+[m[32mTNo     *TNo_setLeftNode(TNo *no, TNo *left);[m
[32m+[m[32mTNo     *TNo_setRightNode(TNo *no, TNo *right);[m
[32m+[m[32mvoid    *TNo_dump(TNo *no);[m
[32m+[m
[32m+[m[32mTBinaryTree  *TBinaryTree_create(TBinaryTree *tree, int *rootValue, int sizeNo);[m
[32m+[m[32mboolean       TBinaryTree_addNode(TBinaryTree *tree, TNo *noCurrent, int *dado, int level);[m
[32m+[m[32mboolean       TBinaryTree_add(TBinaryTree *tree, int *dado);[m
[32m+[m[32mvoid          TBinaryTree_print(TBinaryTree *tree);[m
[32m+[m[32mvoid          TBinaryTree_dump(TBinaryTree *tree);[m
[32m+[m[32mvoid          TBinaryTree_dumpChild(TBinaryTree *tree, TNo *child);[m
[32m+[m[32mvoid          TBinaryTree_destroy(TBinaryTree *tree);[m
[32m+[m[32mTNo          *TBinaryTree_find(TBinaryTree *tree, int *dado);[m
[32m+[m
[32m+[m[32m//FunÃ§Ãµes do NÃ³[m
[32m+[m
[32m+[m[32mTNo     *TNo_create(TNo *no, int *dado, int size){[m
[32m+[m[32m    if((no = malloc(sizeof(TNo))) == NULL){[m
[32m+[m[32m        printf("Ocorreu um erro na alocaÃ§Ã£o do nÃ³!\n");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    if((no->dado = malloc(size)) == NULL){[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m        printf("Ocorreu um erro na alocaÃ§Ã£o do dado!\n");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    memcpy(no->dado, dado, size);[m
[32m+[m[32m    no->size = size;[m
[32m+[m[32m    no->left = NULL;[m
[32m+[m[32m    no->right = NULL;[m
[32m+[m[32m    no->pai = NULL;[m
[32m+[m
[32m+[m[32m    return no;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid     TNo_destroy(TNo *no){[m
[32m+[m[32m    free(no->dado);[m
[32m+[m[32m    no->dado = NULL;[m
[32m+[m[32m    no->size = 0;[m
[32m+[m[32m    no->left = no->right = NULL;[m
[32m+[m[32m    free(no);[m
[32m+[m[32m    no = NULL; //nozei[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTNo     *TNo_setLeftNode(TNo *no, TNo *left){[m
[32m+[m[32m    no->left = left;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mTNo     *TNo_setRightNode(TNo *no, TNo *right){[m
[32m+[m[32m    no->right = right;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid     *TNo_dump(TNo *no){[m
[32m+[m[32m    if(no == NULL){ //por algum motivo, apÃ³s ser destruÃ­do, o nÃ³ nÃ£o Ã© alterado para nulo[m
[32m+[m[32m        printf("NÃ³ inexistente!\n");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    printf("NÃ³:                         %x\n", (TNo *) no);[m
[32m+[m[32m    printf("NÃ³ left:                    %x\n", (TNo *) no->left);[m
[32m+[m[32m    printf("NÃ³ right:                   %x\n", (TNo *) no->right);[m
[32m+[m[32m    printf("Tamanho do dado:            %d\n", no->size);[m
[32m+[m[32m    printf("NÃ­vel do nÃ³:                %d\n", no->nivel);[m
[32m+[m[32m    printf("Dado:                      ");[m
[32m+[m[41m    [m
[32m+[m[32m    byte *pc;[m
[32m+[m[32m    pc = (byte *) no->dado;[m
[32m+[m[32m    for(int i = 0; i<no->size; i++){[m
[32m+[m[32m        printf(" %.2x", pc[i]);[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m[32m    printf("\n\n");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//FunÃ§Ãµes da Arvore Binaria[m
[32m+[m[32mTBinaryTree  *TBinaryTree_create(TBinaryTree *tree, int *rootValue, int sizeNo){[m
[32m+[m[32m    if((tree = malloc(sizeof(TBinaryTree)))==NULL){[m
[32m+[m[32m        printf("Ocorreu um erro na alocaÃ§Ã£o da Ã¡rvore!\n");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    tree->raiz = TNo_create(tree->raiz, rootValue, sizeNo);[m
[32m+[m[32m    tree->sizeNo = sizeNo;[m
[32m+[m[32m    tree->nivel = 0;[m
[32m+[m[32m    tree->nelem = 1;[m
[32m+[m[41m    [m
[32m+[m[32m    return tree;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mboolean     TBinaryTree_add(TBinaryTree *tree, int *dado){[m
[32m+[m[32m    boolean resultado;[m
[32m+[m[32m    resultado = TBinaryTree_addNode(tree, tree->raiz, dado, tree->raiz->nivel);[m
[32m+[m[32m    return resultado;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mboolean    TBinaryTree_addNode(TBinaryTree *tree, TNo *noCurrent, int *dado, int nivel){[m
[32m+[m[32m    TNo *novoNo;[m
[32m+[m[32m    static TNo *pai;[m
[32m+[m[41m    [m
[32m+[m[32m    if(noCurrent == NULL){[m
[32m+[m[32m        return FALSE;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    else{[m
[32m+[m[32m        if((novoNo = TNo_create(novoNo, dado, tree->sizeNo))==NULL){[m
[32m+[m[32m            return FALSE;[m
[32m+[m[32m        }[m
[32m+[m[32m        if(*dado == *(noCurrent->dado)){[m
[32m+[m[32m            printf("Dado jÃ¡ existe na Ã¡rvore!\n");[m
[32m+[m[32m            return FALSE;[m
[32m+[m[32m        }[m
[32m+[m[32m        else if(*dado < *(noCurrent->dado)){[m[41m [m
[32m+[m[32m            if(noCurrent->left == NULL){[m
[32m+[m[32m                novoNo->nivel = nivel+1;[m
[32m+[m[32m                tree->nivel = (nivel>tree->nivel)?(nivel):(tree->nivel);[m
[32m+[m[32m                tree->nelem++;[m
[32m+[m[32m                TNo_setLeftNode(noCurrent, novoNo);[m
[32m+[m[32m                return TRUE;[m
[32m+[m[32m            }[m
[32m+[m[32m            else{[m
[32m+[m[32m                TBinaryTree_addNode(tree, noCurrent->left, dado, nivel+1);[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m        }[m
[32m+[m[32m        else{                   //se *dado > *(noCurrent->dado)[m
[32m+[m[32m            if(noCurrent->right == NULL){[m
[32m+[m[32m                novoNo->nivel = nivel+1;[m
[32m+[m[32m                tree->nivel = (nivel>tree->nivel)?(nivel):(tree->nivel);[m
[32m+[m[32m                tree->nelem++;[m
[32m+[m[32m                TNo_setRightNode(noCurrent, novoNo);[m
[32m+[m[32m                return TRUE;[m
[32m+[m[32m            }[m
[32m+[m[32m            else{[m
[32m+[m[32m                TBinaryTree_addNode(tree, noCurrent->right, dado, nivel+1);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m[41m   [m
[32m+[m[32m//proximo passo: fazer o dump, print e find.[m
[32m+[m
[32m+[m[32mvoid     TBinaryTree_dump(TBinaryTree *tree){[m
[32m+[m[32m    printf("No raiz\n");[m
[32m+[m[32m    TBinaryTree_dumpChild(tree,tree->raiz);[m
[32m+[m[32m    printf("sizeNo = %d\n",tree->sizeNo);[m
[32m+[m[32m    printf("nivel  = %d\n",tree->nivel);[m
[32m+[m[32m    printf("neleme = %d\n",tree->nelem);[m
[32m+[m[41m   [m
[32m+[m[32m}[m
[32m+[m[32mvoid TBinaryTree_dumpChild(TBinaryTree *tree,TNo *child){[m
[32m+[m[32m    if(child != NULL){[m
[32m+[m[32m        printf("-------------------------------\n");[m
[32m+[m[32m        TNo_dump(child);[m
[32m+[m[32m        printf("-------------------------------\n");[m
[32m+[m[32m        // Se o filho for uma folha[m
[32m+[m[32m        if(( child->left==NULL)&&(child->right==NULL)){[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            if(child->left != NULL){[m
[32m+[m[32m                TBinaryTree_dumpChild(tree,child->left);[m
[32m+[m[32m            }[m
[32m+[m[32m            if(child->right != NULL){[m
[32m+[m[32m                TBinaryTree_dumpChild(tree,child->right);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mint main()[m
[32m+[m[32m{[m
[32m+[m[32m    //Testando as funÃ§Ãµes de nÃ³s[m
[32m+[m[32m    TNo *no1, *no2, *no3;[m
[32m+[m[32m    TBinaryTree *tree;[m
[32m+[m[32m    int a, b, c, d, e, rootValue;[m
[32m+[m[32m    a = 1;[m
[32m+[m[32m    b = 5;[m
[32m+[m[32m    c = 7;[m
[32m+[m[32m    d = 0;[m
[32m+[m[32m    e = 10;[m
[32m+[m[32m    rootValue = 6;[m
[32m+[m[32m    /*[m
[32m+[m[32m    if((no1 = TNo_create(no1, &a, sizeof(int)))==NULL){[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(no1);[m
[32m+[m[41m    [m
[32m+[m[32m    if((no2 = TNo_create(no2, &b, sizeof(int)))==NULL){[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(no2);[m
[32m+[m[41m    [m
[32m+[m[32m    if((no3 = TNo_create(no3, &c, sizeof(int)))==NULL){[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(no3);[m
[32m+[m[41m    [m
[32m+[m[32m    printf("-----------Mostrando Left e Right Functions-----------\n\n");[m
[32m+[m[32m    TNo_setLeftNode(no1, no2);[m
[32m+[m[32m    TNo_dump(no1);[m
[32m+[m[32m    TNo_setRightNode(no1, no3);[m
[32m+[m[32m    TNo_dump(no1);[m
[32m+[m[41m    [m
[32m+[m[32m    printf("-----------Mostrando Function de deleÃ§Ã£o-----------\n\n");[m
[32m+[m[32m    TNo_destroy(no2);[m
[32m+[m[32m    TNo_dump(no2);*/[m
[32m+[m[41m    [m
[32m+[m[32m    //Testando funÃ§Ãµes da Ã¡rvore[m
[32m+[m[32m    if((tree = TBinaryTree_create(tree, &rootValue, sizeof(int)))==NULL){[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    //Caso 1: adiÃ§Ã£o quando a Ã¡rvore tem apenas o nÃ³ raiz, e dado Ã© menor que raiz->dado[m
[32m+[m[32m    if((TBinaryTree_add(tree, &a))==TRUE){[m
[32m+[m[32m        printf("AdiÃ§Ã£o feita Ã  esquerda da Ã¡rvore!\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(tree->raiz);[m
[32m+[m[32m    TNo_dump(tree->raiz->left);[m
[32m+[m[41m    [m
[32m+[m[32m    //Caso 2: adiÃ§Ã£o quando a Ã¡rvore tem apenas o nÃ³ raiz, e dado Ã© maior que raiz->dado[m
[32m+[m[32m    if((TBinaryTree_add(tree, &c))==TRUE){[m
[32m+[m[32m        printf("AdiÃ§Ã£o feita Ã  direita da Ã¡rvore!\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(tree->raiz);[m
[32m+[m[32m    TNo_dump(tree->raiz->right);[m
[32m+[m[41m    [m
[32m+[m[32m    //Caso 3: adiÃ§Ã£o Ã  esquerda quando no->raiz->left tem filho, chamando addNode pelo menos 1 vez[m
[32m+[m[32m    if((TBinaryTree_add(tree, &d))==TRUE){[m
[32m+[m[32m        printf("AdiÃ§Ã£o feita Ã  esquerda da Ã¡rvore!\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(tree->raiz);[m
[32m+[m[32m    TNo_dump(tree->raiz->left);[m
[32m+[m[41m    [m
[32m+[m[32m    //Caso 4: adiÃ§Ã£o Ã  direita quando no->raiz->right tem filho, chamando addNode plmns 1 vez[m
[32m+[m[32m    if((TBinaryTree_add(tree, &e))==TRUE){[m
[32m+[m[32m        printf("AdiÃ§Ã£o feita Ã  direita da Ã¡rvore!\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(tree->raiz);[m
[32m+[m[32m    TNo_dump(tree->raiz->right);[m
[32m+[m[41m    [m
[32m+[m[32m    //Caso 5: dado jÃ¡ existe na Ã¡rvore[m
[32m+[m[32m    if((TBinaryTree_add(tree, &e))==TRUE){[m
[32m+[m[32m        printf("AdiÃ§Ã£o feita Ã  direita da Ã¡rvore!\n");[m
[32m+[m[32m    }[m
[32m+[m[32m    TNo_dump(tree->raiz);[m
[32m+[m[32m    TNo_dump(tree->raiz->right);[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio-filas/fila.c b/Atividades/S3/Estrutura de Dados/exercicio-filas/fila.c[m
[1mnew file mode 100644[m
[1mindex 0000000..fce2b7e[m
[1m--- /dev/null[m
[1m+++ b/Atividades/S3/Estrutura de Dados/exercicio-filas/fila.c[m	
[36m@@ -0,0 +1,159 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <string.h>[m
[32m+[m
[32m+[m[32m#define FALSE 0[m[41m [m
[32m+[m[32m#define TRUE 1[m
[32m+[m
[32m+[m[32mtypedef unsigned char byte;[m
[32m+[m
[32m+[m[32mtypedef byte boolean;[m
[32m+[m
[32m+[m[32mtypedef struct Fila {[m
[32m+[m[32m    int quantElementosMax;  // Quantidade mÃ¡xima de elementos que a fila comporta[m
[32m+[m[32m    int quantElementos;     //Quantidade de elementos[m
[32m+[m[32m    int sizeElem;           //Tamanho em bytes do elemento[m
[32m+[m[32m    byte *buffer;           //Ãrea alocada para a fila[m
[32m+[m[32m    byte *pin;              //Ponteiro apontando para o Ãºltimo elemento a ser colocado na fila[m
[32m+[m[32m    byte *pout;             //Ponteiro apontando para o primeiro elemento a ser colocado na fila[m
[32m+[m[32m} Fila;[m
[32m+[m
[32m+[m[32mFila *Fila_cria(Fila *fila, int quantElementosMax, int sizeElem);[m
[32m+[m[32mvoid Fila_destroy(Fila *fila);[m
[32m+[m[32mvoid *Fila_push(Fila *fila, char *item);[m
[32m+[m[32mvoid *Fila_pop(Fila *fila);[m
[32m+[m[32mint Fila_getSize(Fila *fila);[m
[32m+[m[32mboolean Fila_isEmpty(Fila *fila);[m
[32m+[m[32mvoid Fila_show(Fila *fila);[m
[32m+[m[41m    [m
[32m+[m[32mFila *Fila_cria(Fila *fila, int quantElementosMax, int sizeElem){[m
[32m+[m[32m    fila = malloc(sizeof(Fila));[m
[32m+[m[32m    if(fila == NULL){[m
[32m+[m[32m        printf("Ocorreu um erro!");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    fila->buffer = malloc(sizeElem*quantElementosMax);[m
[32m+[m[41m    [m
[32m+[m[32m    fila->pin = fila->buffer;[m
[32m+[m[32m    fila->pout = fila->buffer;[m
[32m+[m[32m    fila->quantElementosMax = quantElementosMax;[m
[32m+[m[32m    fila->quantElementos = 0;[m
[32m+[m[32m    fila->sizeElem = sizeElem;[m
[32m+[m[41m    [m
[32m+[m[32m    return fila;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Fila_destroy(Fila *fila){[m
[32m+[m[32m    free(fila->buffer);[m
[32m+[m[32m    free(fila);[m
[32m+[m[32m    fila = NULL;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid *Fila_push(Fila *fila, char *item){[m
[32m+[m[32m    if(fila == NULL || (fila->quantElementos == fila->quantElementosMax)){[m
[32m+[m[32m        printf("A fila nÃ£o foi alocada ou jÃ¡ estÃ¡ cheia");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(fila->pout > fila->buffer + (fila->sizeElem * fila->quantElementos)){[m[41m [m
[32m+[m[32m        fila->pout = fila->buffer;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    memcpy(fila->pout, item, fila->sizeElem);[m
[32m+[m[32m    fila->pout += fila->sizeElem;[m
[32m+[m[32m    fila->quantElementos++;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid *Fila_pop(Fila *fila){[m
[32m+[m[32m    if(fila == NULL || (fila->quantElementos == 0)){[m
[32m+[m[32m        printf("A fila nÃ£o foi alocada ou ainda estÃ¡ vazia");[m
[32m+[m[32m        return NULL;[m
[32m+[m[32m    }[m
[32m+[m[32m    for(int i = 0; i<fila->sizeElem; i++){[m
[32m+[m[32m        printf("%.2x ", fila->pin[i]);[m
[32m+[m[32m    }[m
[32m+[m[32m    memset(fila->pin, 0x00, fila->sizeElem);[m
[32m+[m[32m    fila->pin += fila->sizeElem;[m
[32m+[m[32m    fila->quantElementos--;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint Fila_getSize(Fila *fila){[m
[32m+[m[32m    return fila->sizeElem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mboolean Fila_isEmpty(Fila *fila){[m
[32m+[m[32m    boolean resultado = fila->quantElementos==0?TRUE:FALSE;[m
[32m+[m[32m    return resultado;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Fila_show(Fila *fila){[m
[32m+[m[32m    printf("Quantidade mÃ¡xima de elementos:     %d\n", fila->quantElementosMax);[m
[32m+[m[32m    printf("Quantidade de elementos:            %d\n", fila->quantElementos);[m
[32m+[m[32m    printf("Tamanho do elemento:                %d\n", fila->sizeElem);[m
[32m+[m[32m    printf("Primeiro endereÃ§o do buffer:        %x\n", fila->buffer);[m
[32m+[m[32m    printf("Primeiro endereÃ§o da fila:          %x\n", fila->pin);[m
[32m+[m[32m    printf("Ãltimo endereÃ§o da fila + 1 byte:   %x\n\n", fila->pout);[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    byte *pcur = fila->pin;[m
[32m+[m[32m    int i, j;[m
[32m+[m[32m    for(i = 0; i<fila->quantElementos; i++){ //loop pra andar pelos elementos da fila[m
[32m+[m[41m        [m
[32m+[m[32m        if(pcur > fila->buffer + (fila->sizeElem * fila->quantElementos)){[m[41m [m
[32m+[m[32m            pcur = fila->buffer; //continua dando errado[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        for(j = 0; j<fila->sizeElem; j++){   //loop pra andar por cada byte de cada elemento[m[41m     [m
[32m+[m[32m            printf("%.2x ", pcur[j]);[m
[32m+[m[32m        }[m
[32m+[m[32m        printf(" <- ");[m
[32m+[m[41m        [m
[32m+[m[32m        pcur += fila->sizeElem;[m
[32m+[m[32m    }[m
[32m+[m[32m    printf("\n\n");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[41m [m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mint main(){[m
[32m+[m[32m    int a = 6;[m
[32m+[m[32m    int b = 5;[m
[32m+[m[32m    int c = 4;[m
[32m+[m[32m    int d = 3;[m
[32m+[m[32m    int e = 2;[m
[32m+[m[32m    int f = 1;[m
[32m+[m[41m    [m
[32m+[m[32m    Fila *fila = Fila_cria(fila, 5, sizeof(int));[m
[32m+[m[41m    [m
[32m+[m[32m    Fila_push(fila, &a);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m
[32m+[m[32m    Fila_push(fila, &b);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m
[32m+[m[32m    Fila_push(fila, &c);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m
[32m+[m[32m    Fila_push(fila, &d);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m[41m    [m
[32m+[m[32m    Fila_push(fila, &e);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m[41m    [m
[32m+[m[32m    Fila_pop(fila);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m[41m    [m
[32m+[m[32m    Fila_pop(fila);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m[41m    [m
[32m+[m[32m    Fila_push(fila, &f);[m
[32m+[m[32m    Fila_show(fila);[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/.vscode/tasks.json b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/.vscode/tasks.json[m
[1mnew file mode 100644[m
[1mindex 0000000..871afd9[m
[1m--- /dev/null[m
[1m+++ b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/.vscode/tasks.json[m	
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "tasks": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "type": "cppbuild",[m
[32m+[m[32m            "label": "C/C++: gcc.exe arquivo de build ativo",[m
[32m+[m[32m            "command": "C:\\MinGW\\mingw64\\bin\\gcc.exe",[m
[32m+[m[32m            "args": [[m
[32m+[m[32m                "-fdiagnostics-color=always",[m
[32m+[m[32m                "-g",[m
[32m+[m[32m                "${file}",[m
[32m+[m[32m                "-o",[m
[32m+[m[32m                "${fileDirname}\\${fileBasenameNoExtension}.exe"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "options": {[m
[32m+[m[32m                "cwd": "${fileDirname}"[m
[32m+[m[32m            },[m
[32m+[m[32m            "problemMatcher": [[m
[32m+[m[32m                "$gcc"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "group": {[m
[32m+[m[32m                "kind": "build",[m
[32m+[m[32m                "isDefault": true[m
[32m+[m[32m            },[m
[32m+[m[32m            "detail": "Tarefa gerada pelo Depurador."[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "version": "2.0.0"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples.c b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples.c[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples.c[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples.c[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples.exe b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples.exe[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio4/lista_encadeada_simples.exe[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/lista_encadeada_simples.exe[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio4/output/atividade4.2.exe b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/output/atividade4.2.exe[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio4/output/atividade4.2.exe[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/output/atividade4.2.exe[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio4/tempCodeRunnerFile.exe b/Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/tempCodeRunnerFile.exe[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio4/tempCodeRunnerFile.exe[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-lista-encadeada/tempCodeRunnerFile.exe[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio1/vetor_matriz.c b/Atividades/S3/Estrutura de Dados/exercicio-matrizes/vetor_matriz.c[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio1/vetor_matriz.c[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-matrizes/vetor_matriz.c[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio3/struct_aloc-dinamica.c b/Atividades/S3/Estrutura de Dados/exercicio-structs-aloc-dinam/struct_aloc-dinamica.c[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio3/struct_aloc-dinamica.c[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-structs-aloc-dinam/struct_aloc-dinamica.c[m
[1mdiff --git a/Atividades/S3/Estrutura de Dados/exercicio2/structs.c b/Atividades/S3/Estrutura de Dados/exercicio-structs/struct.c[m
[1msimilarity index 100%[m
[1mrename from Atividades/S3/Estrutura de Dados/exercicio2/structs.c[m
[1mrename to Atividades/S3/Estrutura de Dados/exercicio-structs/struct.c[m
